// Code generated by go_code.py; DO NOT EDIT.

package readline
import "strconv"
type Action uint
const (
ActionNil Action = iota
ActionBackspace
ActionDelete
ActionMoveToStartOfLine
ActionMoveToEndOfLine
ActionMoveToStartOfDocument
ActionMoveToEndOfDocument
ActionMoveToEndOfWord
ActionMoveToStartOfWord
ActionCursorLeft
ActionCursorRight
ActionEndInput
ActionAcceptInput
ActionCursorUp
ActionHistoryPreviousOrCursorUp
ActionCursorDown
ActionHistoryNextOrCursorDown
ActionHistoryNext
ActionHistoryPrevious
ActionHistoryFirst
ActionHistoryLast
ActionHistoryIncrementalSearchBackwards
ActionHistoryIncrementalSearchForwards
ActionTerminateHistorySearchAndApply
ActionTerminateHistorySearchAndRestore
ActionClearScreen
ActionAddText
ActionAbortCurrentLine
ActionStartKillActions
ActionKillToEndOfLine
ActionKillToStartOfLine
ActionKillNextWord
ActionKillPreviousWord
ActionKillPreviousSpaceDelimitedWord
ActionEndKillActions
ActionYank
ActionPopYank
ActionNumericArgumentDigit0
ActionNumericArgumentDigit1
ActionNumericArgumentDigit2
ActionNumericArgumentDigit3
ActionNumericArgumentDigit4
ActionNumericArgumentDigit5
ActionNumericArgumentDigit6
ActionNumericArgumentDigit7
ActionNumericArgumentDigit8
ActionNumericArgumentDigit9
ActionNumericArgumentDigitMinus
ActionCompleteForward
ActionCompleteBackward
)
func (ac Action) String() string {
switch(ac) {
case ActionNil: return "ActionNil"
case ActionBackspace: return "ActionBackspace"
case ActionDelete: return "ActionDelete"
case ActionMoveToStartOfLine: return "ActionMoveToStartOfLine"
case ActionMoveToEndOfLine: return "ActionMoveToEndOfLine"
case ActionMoveToStartOfDocument: return "ActionMoveToStartOfDocument"
case ActionMoveToEndOfDocument: return "ActionMoveToEndOfDocument"
case ActionMoveToEndOfWord: return "ActionMoveToEndOfWord"
case ActionMoveToStartOfWord: return "ActionMoveToStartOfWord"
case ActionCursorLeft: return "ActionCursorLeft"
case ActionCursorRight: return "ActionCursorRight"
case ActionEndInput: return "ActionEndInput"
case ActionAcceptInput: return "ActionAcceptInput"
case ActionCursorUp: return "ActionCursorUp"
case ActionHistoryPreviousOrCursorUp: return "ActionHistoryPreviousOrCursorUp"
case ActionCursorDown: return "ActionCursorDown"
case ActionHistoryNextOrCursorDown: return "ActionHistoryNextOrCursorDown"
case ActionHistoryNext: return "ActionHistoryNext"
case ActionHistoryPrevious: return "ActionHistoryPrevious"
case ActionHistoryFirst: return "ActionHistoryFirst"
case ActionHistoryLast: return "ActionHistoryLast"
case ActionHistoryIncrementalSearchBackwards: return "ActionHistoryIncrementalSearchBackwards"
case ActionHistoryIncrementalSearchForwards: return "ActionHistoryIncrementalSearchForwards"
case ActionTerminateHistorySearchAndApply: return "ActionTerminateHistorySearchAndApply"
case ActionTerminateHistorySearchAndRestore: return "ActionTerminateHistorySearchAndRestore"
case ActionClearScreen: return "ActionClearScreen"
case ActionAddText: return "ActionAddText"
case ActionAbortCurrentLine: return "ActionAbortCurrentLine"
case ActionStartKillActions: return "ActionStartKillActions"
case ActionKillToEndOfLine: return "ActionKillToEndOfLine"
case ActionKillToStartOfLine: return "ActionKillToStartOfLine"
case ActionKillNextWord: return "ActionKillNextWord"
case ActionKillPreviousWord: return "ActionKillPreviousWord"
case ActionKillPreviousSpaceDelimitedWord: return "ActionKillPreviousSpaceDelimitedWord"
case ActionEndKillActions: return "ActionEndKillActions"
case ActionYank: return "ActionYank"
case ActionPopYank: return "ActionPopYank"
case ActionNumericArgumentDigit0: return "ActionNumericArgumentDigit0"
case ActionNumericArgumentDigit1: return "ActionNumericArgumentDigit1"
case ActionNumericArgumentDigit2: return "ActionNumericArgumentDigit2"
case ActionNumericArgumentDigit3: return "ActionNumericArgumentDigit3"
case ActionNumericArgumentDigit4: return "ActionNumericArgumentDigit4"
case ActionNumericArgumentDigit5: return "ActionNumericArgumentDigit5"
case ActionNumericArgumentDigit6: return "ActionNumericArgumentDigit6"
case ActionNumericArgumentDigit7: return "ActionNumericArgumentDigit7"
case ActionNumericArgumentDigit8: return "ActionNumericArgumentDigit8"
case ActionNumericArgumentDigit9: return "ActionNumericArgumentDigit9"
case ActionNumericArgumentDigitMinus: return "ActionNumericArgumentDigitMinus"
case ActionCompleteForward: return "ActionCompleteForward"
case ActionCompleteBackward: return "ActionCompleteBackward"
}
return strconv.Itoa(int(ac)) }