// Code generated by go_code.py; DO NOT EDIT.

package vt

// Total number of bits used: 24
type CellAttrs uint32

func (s CellAttrs) Hyperlink_id() uint16 {
    return uint16(s & 0b1111111111111111)
}

func (s *CellAttrs) Set_hyperlink_id(val uint16) {
    *s &^= 0b1111111111111111
    *s |= CellAttrs(val & 0b1111111111111111)
}

func (s CellAttrs) Dim() uint8 {
    return uint8((s >> 16) & 0b1)
}

func (s *CellAttrs) Set_dim(val uint8) {
    *s &^= 0b1 << 16
    *s |= CellAttrs(val&0b1) << 16
}

func (s CellAttrs) Strike() uint8 {
    return uint8((s >> 17) & 0b1)
}

func (s *CellAttrs) Set_strike(val uint8) {
    *s &^= 0b1 << 17
    *s |= CellAttrs(val&0b1) << 17
}

func (s CellAttrs) Reverse() uint8 {
    return uint8((s >> 18) & 0b1)
}

func (s *CellAttrs) Set_reverse(val uint8) {
    *s &^= 0b1 << 18
    *s |= CellAttrs(val&0b1) << 18
}

func (s CellAttrs) Italic() uint8 {
    return uint8((s >> 19) & 0b1)
}

func (s *CellAttrs) Set_italic(val uint8) {
    *s &^= 0b1 << 19
    *s |= CellAttrs(val&0b1) << 19
}

func (s CellAttrs) Bold() uint8 {
    return uint8((s >> 20) & 0b1)
}

func (s *CellAttrs) Set_bold(val uint8) {
    *s &^= 0b1 << 20
    *s |= CellAttrs(val&0b1) << 20
}

func (s CellAttrs) Decoration() uint8 {
    return uint8((s >> 21) & 0b111)
}

func (s *CellAttrs) Set_decoration(val uint8) {
    *s &^= 0b111 << 21
    *s |= CellAttrs(val&0b111) << 21
}

