// Code generated by go_code.py; DO NOT EDIT.

package kitty

type VersionType struct {
    Major, Minor, Patch int
}
const VersionString string = "0.43.1"
const WebsiteBaseURL string = "https://sw.kovidgoyal.net/kitty/"
const FileTransferCode int = 5113
const ImagePlaceholderChar rune = 1109742
const SSHControlMasterTemplate = "kssh-{kitty_pid}-{ssh_placeholder}"
const RC_ENCRYPTION_PROTOCOL_VERSION string = "1"
var VCSRevision string = ""
var IsFrozenBuild string = ""
var IsStandaloneBuild string = ""
const HandleTermiosSignals = 19997
const HintsDefaultRegex = `(?m)^\s*(.+?)\s*$`
const DefaultTermName = `xterm-kitty`
const DefaultUrlStyle = `curly`
const DefaultUrlColor = `#0087bd`
const ConfigHelp = "Specify a path to the configuration file(s) to use. All configuration files are\nmerged onto the builtin :file:`{conf_name}.conf`, overriding the builtin values.\nThis option can be specified multiple times to read multiple configuration files\nin sequence, which are merged. Use the special value :code:`NONE` to not load\nany config file.\n\nIf this option is not specified, config files are searched for in the order:\n:file:`$XDG_CONFIG_HOME/{appname}/{conf_name}.conf`,\n:file:`~/.config/{appname}/{conf_name}.conf`, :file:`~/Library/Preferences/{appname}/{conf_name}.conf`,\n:file:`$XDG_CONFIG_DIRS/{appname}/{conf_name}.conf`. The first one that exists\nis used as the config file.\n\nIf the environment variable :envvar:`KITTY_CONFIG_DIRECTORY` is specified, that\ndirectory is always used and the above searching does not happen.\n\nIf :file:`/etc/xdg/{appname}/{conf_name}.conf` exists, it is merged before (i.e.\nwith lower priority) than any user config files. It can be used to specify\nsystem-wide defaults for all users. You can use either :code:`-` or\n:file:`/dev/stdin` to read the config from STDIN.\n"
var Version VersionType = VersionType{Major: 0, Minor: 43, Patch: 1,}
var DefaultPager []string = []string{ "less", "-iRXF" }
var FunctionalKeyNameAliases = map[string]string{"ESC": "ESCAPE", "PGUP": "PAGE_UP", "PAGEUP": "PAGE_UP", "PGDN": "PAGE_DOWN", "PAGEDOWN": "PAGE_DOWN", "RETURN": "ENTER", "ARROWUP": "UP", "ARROWDOWN": "DOWN", "ARROWRIGHT": "RIGHT", "ARROWLEFT": "LEFT", "DEL": "DELETE", "KP_PLUS": "KP_ADD", "KP_MINUS": "KP_SUBTRACT"}
var CharacterKeyNameAliases = map[string]string{"SPC": " ", "SPACE": " ", "STAR": "*", "MULTIPLY": "*", "PLUS": "+", "MINUS": "-", "BAR": "|", "PIPE": "|", "HYPHEN": "-", "EQUAL": "=", "UNDERSCORE": "_", "COMMA": ",", "PERIOD": ".", "DOT": ".", "SLASH": "/", "BACKSLASH": "\\", "TILDE": "~", "GRAVE": "`", "GRAVE_ACCENT": "`", "APOSTROPHE": "'", "SEMICOLON": ";", "COLON": ":", "LEFT_BRACKET": "[", "RIGHT_BRACKET": "]"}
var ConfigModMap = map[string]uint16{"SHIFT": 1, "⇧": 1, "ALT": 2, "OPTION": 2, "OPT": 2, "⌥": 2, "SUPER": 8, "COMMAND": 8, "CMD": 8, "⌘": 8, "CONTROL": 4, "CTRL": 4, "⌃": 4, "HYPER": 16, "META": 32, "NUM_LOCK": 128, "CAPS_LOCK": 64}
var RefMap = map[string]string{"animation_protocol": "graphics-protocol/#animation-protocol", "auto_color_scheme": "kittens/themes/#auto-color-scheme", "base64": "desktop-notifications/#base64", "bypass_auth": "file-transfer-protocol/#bypass-auth", "clipboard_repeated_permission": "clipboard/#clipboard-repeated-permission", "clone_shell": "shell-integration/#clone-shell", "color_control": "color-stack/#color-control", "color_control_color_encoding": "color-stack/#color-control-color-encoding", "complex_sessions": "sessions/#complex-sessions", "conditional_mappings": "mapping/#conditional-mappings", "confloc": "conf/#confloc", "cpbuf": "overview/#cpbuf", "ctrl_mapping": "keyboard-protocol/#ctrl-mapping", "detach_window": "basic/#detach-window", "detect_text_sizing": "text-sizing-protocol/#detect-text-sizing", "detection": "keyboard-protocol/#detection", "disambiguate": "keyboard-protocol/#disambiguate", "edit_file": "shell-integration/#edit-file", "env_vars": "glossary/#env-vars", "event_types": "keyboard-protocol/#event-types", "external_kittens": "kittens/custom/#external-kittens", "extra_cursor_color": "multiple-cursors-protocol/#extra-cursor-color", "file_metadata": "file-transfer-protocol/#file-metadata", "fixterms_bugs": "keyboard-protocol/#fixterms-bugs", "font_spec_syntax": "kittens/choose-fonts/#font-spec-syntax", "functional": "keyboard-protocol/#functional", "goto_session": "sessions/#goto-session", "graphics_unicode_placeholders": "graphics-protocol/#graphics-unicode-placeholders", "gseg": "text-sizing-protocol/#gseg", "identifier": "desktop-notifications/#identifier", "include": "conf/#include", "key_codes": "keyboard-protocol/#key-codes", "keys_in_notificatons_protocol": "desktop-notifications/#keys-in-notificatons-protocol", "kitten_main_rc": "kittens/custom/#kitten-main-rc", "kittens": "kittens_intro/", "launch_actions": "open_actions/#launch-actions", "layouts": "overview/#layouts", "legacy_text": "keyboard-protocol/#legacy-text", "manual_shell_integration": "shell-integration/#manual-shell-integration", "manual_terminfo_copy": "kittens/ssh/#manual-terminfo-copy", "marker_funcs": "marks/#marker-funcs", "matching_criteria": "open_actions/#matching-criteria", "modal_mappings": "mapping/#modal-mappings", "modifiers": "keyboard-protocol/#modifiers", "mouse_leave_window": "misc-protocol/#mouse-leave-window", "nightly": "binary/#nightly", "notifications_on_the_desktop": "desktop-notifications/", "notifications_query": "desktop-notifications/#notifications-query", "packagers": "build/#packagers", "panel_compat": "kittens/panel/#panel-compat", "panel_projects": "kittens/panel/#panel-projects", "pointer_shape_names": "pointer-shapes/#pointer-shape-names", "progressive_enhancement": "keyboard-protocol/#progressive-enhancement", "quake": "kittens/quick-access-terminal/", "quake_ss": "kittens/panel/#quake-ss", "quickstart": "quickstart/", "rc_crypto": "rc_protocol/#rc-crypto", "rc_custom_auth": "remote-control/#rc-custom-auth", "rc_mapping": "remote-control/#rc-mapping", "rc_via_socket": "remote-control/#rc-via-socket", "real_world_ssh_kitten_config": "kittens/ssh/#real-world-ssh-kitten-config", "relative_image_placement": "graphics-protocol/#relative-image-placement", "remote_control_panel": "kittens/panel/#remote-control-panel", "report_all_keys": "keyboard-protocol/#report-all-keys", "report_alternates": "keyboard-protocol/#report-alternates", "report_events": "keyboard-protocol/#report-events", "report_text": "keyboard-protocol/#report-text", "run_shell": "shell-integration/#run-shell", "safe_utf8": "desktop-notifications/#safe-utf8", "save_as_session": "sessions/#save-as-session", "scrollback": "overview/#scrollback", "search_syntax": "remote-control/#search-syntax", "send_mouse_event": "kittens/custom/#send-mouse-event", "sessions": "sessions/", "shell_integration": "shell-integration/", "splits_layout": "layouts/#splits-layout", "ssh_copy_command": "kittens/ssh/#ssh-copy-command", "text_as_codepoints": "keyboard-protocol/#text-as-codepoints", "throughput": "performance/#throughput", "tool_KittyTerminalImage": "integrations/#tool-KittyTerminalImage", "tool_awrit": "integrations/#tool-awrit", "tool_chawan": "integrations/#tool-chawan", "tool_clifm": "integrations/#tool-clifm", "tool_euporie": "integrations/#tool-euporie", "tool_fancy_cat": "integrations/#tool-fancy-cat", "tool_gnuplot": "integrations/#tool-gnuplot", "tool_hunter": "integrations/#tool-hunter", "tool_k-nine": "integrations/#tool-k-nine", "tool_koneko": "integrations/#tool-koneko", "tool_matplotlib": "integrations/#tool-matplotlib", "tool_mcat": "integrations/#tool-mcat", "tool_meowpdf": "integrations/#tool-meowpdf", "tool_mpv": "integrations/#tool-mpv", "tool_nb": "integrations/#tool-nb", "tool_neofetch": "integrations/#tool-neofetch", "tool_nnn": "integrations/#tool-nnn", "tool_presentterm": "integrations/#tool-presentterm", "tool_ranger": "integrations/#tool-ranger", "tool_tdf": "integrations/#tool-tdf", "tool_term_image": "integrations/#tool-term-image", "tool_termpdf": "integrations/#tool-termpdf", "tool_timg": "integrations/#tool-timg", "tool_viu": "integrations/#tool-viu", "tool_w3m": "integrations/#tool-w3m", "tool_yazi": "integrations/#tool-yazi", "transferring_pixel_data": "graphics-protocol/#transferring-pixel-data", "unscroll": "unscroll/", "var_select": "text-sizing-protocol/#var-select", "watchers": "launch/#watchers", "window_resizing": "layouts/#window-resizing"}
var DocTitleMap = map[string]string{"actions": "Mappable actions", "basic": "Tabs and Windows", "binary": "Install kitty", "build": "Build from source", "changelog": "Changelog", "clipboard": "Copying all data types to the clipboard", "color-stack": "Color control", "conf": "kitty.conf", "deccara": "Setting text styles/colors in arbitrary regions of the screen", "desktop-notifications": "Desktop notifications", "faq": "Frequently Asked Questions", "file-transfer-protocol": "File transfer over the TTY", "glossary": "Glossary", "graphics-protocol": "Terminal graphics protocol", "index": "kitty", "integrations": "Integrations with other tools", "intro_vid": "", "invocation": "The kitty command line interface", "keyboard-protocol": "Comprehensive keyboard handling in terminals", "kittens/broadcast": "broadcast", "kittens/choose-files": "Selecting files, fast", "kittens/choose-fonts": "Changing kitty fonts", "kittens/clipboard": "clipboard", "kittens/custom": "Custom kittens", "kittens/desktop-ui": "Using terminal programs to provide Linux desktop components", "kittens/developing-builtin-kittens": "Developing builtin kittens", "kittens/diff": "kitty-diff", "kittens/hints": "Hints", "kittens/hyperlinked_grep": "Hyperlinked grep", "kittens/icat": "icat", "kittens/notify": "notify", "kittens/panel": "Draw a GPU accelerated dock panel on your desktop", "kittens/query_terminal": "Query terminal", "kittens/quick-access-terminal": "Make a Quake like quick access terminal", "kittens/remote_file": "Remote files", "kittens/ssh": "Truly convenient SSH", "kittens/themes": "Changing kitty colors", "kittens/transfer": "Transfer files", "kittens/unicode_input": "Unicode input", "kittens_intro": "Extend with kittens", "launch": "The :command:`launch` command", "layouts": "Arrange windows", "mapping": "Making your keyboard dance", "marks": "Mark text on screen", "misc-protocol": "Miscellaneous protocol extensions", "multiple-cursors-protocol": "The multiple cursors protocol", "open_actions": "Scripting the mouse click", "overview": "Overview", "performance": "Performance", "pipe": "Working with the screen and history buffer contents", "pointer-shapes": "Mouse pointer shapes", "press-mentions": "Press mentions of kitty", "protocol-extensions": "Terminal protocol extensions", "quake-screenshots": "", "quickstart": "Quickstart", "rc_protocol": "The kitty remote control protocol", "remote-control": "Control kitty from scripts", "sessions": "Sessions", "shell-integration": "Shell integration", "support": "Support kitty development ❤️", "text-sizing-protocol": "The text sizing protocol", "underlines": "Colored and styled underlines", "unscroll": "Unscrolling the screen"}
var AllowedShellIntegrationValues = []string{ "disabled", "enabled", "no-complete", "no-cursor", "no-cwd", "no-prompt-mark", "no-rc", "no-sudo", "no-title" }
var QueryNames = []string{ "name", "version", "allow_hyperlinks", "font_family", "bold_font", "italic_font", "bold_italic_font", "font_size", "dpi_x", "dpi_y", "foreground", "background", "background_opacity", "clipboard_control", "os_name" }
var CommentedOutDefaultConfig = "# vim:fileencoding=utf-8:foldmethod=marker\n\n#: Fonts {{{\n\n#: kitty has very powerful font management. You can configure\n#: individual font faces and even specify special fonts for particular\n#: characters.\n\n# font_family      monospace\n# bold_font        auto\n# italic_font      auto\n# bold_italic_font auto\n\n#: You can specify different fonts for the bold/italic/bold-italic\n#: variants. The easiest way to select fonts is to run the `kitten\n#: choose-fonts` command which will present a nice UI for you to\n#: select the fonts you want with previews and support for selecting\n#: variable fonts and font features. If you want to learn to select\n#: fonts manually, read the font specification syntax\n#: <https://sw.kovidgoyal.net/kitty/kittens/choose-fonts/#font-spec-\n#: syntax>.\n\n# font_size 11.0\n\n#: Font size (in pts).\n\n# force_ltr no\n\n#: kitty does not support BIDI (bidirectional text), however, for RTL\n#: scripts, words are automatically displayed in RTL. That is to say,\n#: in an RTL script, the words \"HELLO WORLD\" display in kitty as\n#: \"WORLD HELLO\", and if you try to select a substring of an RTL-\n#: shaped string, you will get the character that would be there had\n#: the string been LTR. For example, assuming the Hebrew word ירושלים,\n#: selecting the character that on the screen appears to be ם actually\n#: writes into the selection buffer the character י. kitty's default\n#: behavior is useful in conjunction with a filter to reverse the word\n#: order, however, if you wish to manipulate RTL glyphs, it can be\n#: very challenging to work with, so this option is provided to turn\n#: it off. Furthermore, this option can be used with the command line\n#: program GNU FriBidi <https://github.com/fribidi/fribidi#executable>\n#: to get BIDI support, because it will force kitty to always treat\n#: the text as LTR, which FriBidi expects for terminals.\n\n# symbol_map\n\n#: E.g. symbol_map U+E0A0-U+E0A3,U+E0C0-U+E0C7 PowerlineSymbols\n\n#: Map the specified Unicode codepoints to a particular font. Useful\n#: if you need special rendering for some symbols, such as for\n#: Powerline. Avoids the need for patched fonts. Each Unicode code\n#: point is specified in the form `U+<code point in hexadecimal>`. You\n#: can specify multiple code points, separated by commas and ranges\n#: separated by hyphens. This option can be specified multiple times.\n#: The syntax is::\n\n#:     symbol_map codepoints Font Family Name\n\n# narrow_symbols\n\n#: E.g. narrow_symbols U+E0A0-U+E0A3,U+E0C0-U+E0C7 1\n\n#: Usually, for Private Use Unicode characters and some symbol/dingbat\n#: characters, if the character is followed by one or more spaces,\n#: kitty will use those extra cells to render the character larger, if\n#: the character in the font has a wide aspect ratio. Using this\n#: option you can force kitty to restrict the specified code points to\n#: render in the specified number of cells (defaulting to one cell).\n#: This option can be specified multiple times. The syntax is::\n\n#:     narrow_symbols codepoints [optionally the number of cells]\n\n# disable_ligatures never\n\n#: Choose how you want to handle multi-character ligatures. The\n#: default is to always render them. You can tell kitty to not render\n#: them when the cursor is over them by using cursor to make editing\n#: easier, or have kitty never render them at all by using always, if\n#: you don't like them. The ligature strategy can be set per-window\n#: either using the kitty remote control facility or by defining\n#: shortcuts for it in kitty.conf, for example::\n\n#:     map alt+1 disable_ligatures_in active always\n#:     map alt+2 disable_ligatures_in all never\n#:     map alt+3 disable_ligatures_in tab cursor\n\n#: Note that this refers to programming ligatures, typically\n#: implemented using the calt OpenType feature. For disabling general\n#: ligatures, use the font_features option.\n\n# font_features\n\n#: E.g. font_features none\n\n#: Choose exactly which OpenType features to enable or disable. Note\n#: that for the main fonts, features can be specified when selecting\n#: the font using the choose-fonts kitten. This setting is useful for\n#: fallback fonts.\n\n#: Some fonts might have features worthwhile in a terminal. For\n#: example, Fira Code includes a discretionary feature, zero, which in\n#: that font changes the appearance of the zero (0), to make it more\n#: easily distinguishable from Ø. Fira Code also includes other\n#: discretionary features known as Stylistic Sets which have the tags\n#: ss01 through ss20.\n\n#: For the exact syntax to use for individual features, see the\n#: HarfBuzz documentation <https://harfbuzz.github.io/harfbuzz-hb-\n#: common.html#hb-feature-from-string>.\n\n#: Note that this code is indexed by PostScript name, and not the font\n#: family. This allows you to define very precise feature settings;\n#: e.g. you can disable a feature in the italic font but not in the\n#: regular font.\n\n#: On Linux, font features are first read from the FontConfig database\n#: and then this option is applied, so they can be configured in a\n#: single, central place.\n\n#: To get the PostScript name for a font, use the `fc-scan file.ttf`\n#: command on Linux or the `Font Book tool on macOS\n#: <https://apple.stackexchange.com/questions/79875/how-can-i-get-the-\n#: postscript-name-of-a-ttf-font-installed-in-os-x>`__.\n\n#: Enable alternate zero and oldstyle numerals::\n\n#:     font_features FiraCode-Retina +zero +onum\n\n#: Enable only alternate zero in the bold font::\n\n#:     font_features FiraCode-Bold +zero\n\n#: Disable the normal ligatures, but keep the calt feature which (in\n#: this font) breaks up monotony::\n\n#:     font_features TT2020StyleB-Regular -liga +calt\n\n#: In conjunction with force_ltr, you may want to disable Arabic\n#: shaping entirely, and only look at their isolated forms if they\n#: show up in a document. You can do this with e.g.::\n\n#:     font_features UnifontMedium +isol -medi -fina -init\n\n# modify_font\n\n#: Modify font characteristics such as the position or thickness of\n#: the underline and strikethrough. The modifications can have the\n#: suffix px for pixels or % for percentage of original value. No\n#: suffix means use pts. For example::\n\n#:     modify_font underline_position -2\n#:     modify_font underline_thickness 150%\n#:     modify_font strikethrough_position 2px\n\n#: Additionally, you can modify the size of the cell in which each\n#: font glyph is rendered and the baseline at which the glyph is\n#: placed in the cell. For example::\n\n#:     modify_font cell_width 80%\n#:     modify_font cell_height -2px\n#:     modify_font baseline 3\n\n#: Note that modifying the baseline will automatically adjust the\n#: underline and strikethrough positions by the same amount.\n#: Increasing the baseline raises glyphs inside the cell and\n#: decreasing it lowers them. Decreasing the cell size might cause\n#: rendering artifacts, so use with care.\n\n# box_drawing_scale 0.001, 1, 1.5, 2\n\n#: The sizes of the lines used for the box drawing Unicode characters.\n#: These values are in pts. They will be scaled by the monitor DPI to\n#: arrive at a pixel value. There must be four values corresponding to\n#: thin, normal, thick, and very thick lines.\n\n# undercurl_style thin-sparse\n\n#: The style with which undercurls are rendered. This option takes the\n#: form (thin|thick)-(sparse|dense). Thin and thick control the\n#: thickness of the undercurl. Sparse and dense control how often the\n#: curl oscillates. With sparse the curl will peak once per character,\n#: with dense twice. Changing this option dynamically via reloading\n#: the config or remote control is undefined.\n\n# underline_exclusion 1\n\n#: By default kitty renders gaps in underlines when they overlap with\n#: descenders (the parts of letters below the baseline, such as for y,\n#: q, p etc.). This option controls the thickness of the gaps. It can\n#: be either a unitless number in which case it is a fraction of the\n#: underline thickness as specified in the font or it can have a\n#: suffix of px for pixels or pt for points. Set to zero to disable\n#: the gaps. Changing this option dynamically via reloading the config\n#: or remote control is undefined.\n\n# text_composition_strategy platform\n\n#: Control how kitty composites text glyphs onto the background color.\n#: The default value of platform tries for text rendering as close to\n#: \"native\" for the platform kitty is running on as possible.\n\n#: A value of legacy uses the old (pre kitty 0.28) strategy for how\n#: glyphs are composited. This will make dark text on light\n#: backgrounds look thicker and light text on dark backgrounds\n#: thinner. It might also make some text appear like the strokes are\n#: uneven.\n\n#: You can fine tune the actual contrast curve used for glyph\n#: composition by specifying up to two space-separated numbers for\n#: this setting.\n\n#: The first number is the gamma adjustment, which controls the\n#: thickness of dark text on light backgrounds. Increasing the value\n#: will make text appear thicker. The default value for this is 1.0 on\n#: Linux and 1.7 on macOS. Valid values are 0.01 and above. The result\n#: is scaled based on the luminance difference between the background\n#: and the foreground. Dark text on light backgrounds receives the\n#: full impact of the curve while light text on dark backgrounds is\n#: affected very little.\n\n#: The second number is an additional multiplicative contrast. It is\n#: percentage ranging from 0 to 100. The default value is 0 on Linux\n#: and 30 on macOS.\n\n#: If you wish to achieve similar looking thickness in light and dark\n#: themes, a good way to experiment is start by setting the value to\n#: 1.0 0 and use a dark theme. Then adjust the second parameter until\n#: it looks good. Then switch to a light theme and adjust the first\n#: parameter until the perceived thickness matches the dark theme.\n\n# text_fg_override_threshold 0\n\n#: A setting to prevent low contrast between foreground and background\n#: colors. Useful when working with applications that use colors that\n#: do not contrast well with your preferred color scheme. The default\n#: value is 0, which means no color overriding is performed. There are\n#: two modes of operation:\n\n#: A value with the suffix ratio represents the minimum accepted\n#: contrast ratio between the foreground and background color.\n#: Possible values range from 0.0 ratio to 21.0 ratio. For example, to\n#: meet WCAG level AA\n#: <https://en.wikipedia.org/wiki/Web_Content_Accessibility_Guidelines>\n#: a value of 4.5 ratio can be provided. The algorithm is implemented\n#: using HSLuv <https://www.hsluv.org/> which enables it to change the\n#: perceived lightness of a color just as much as needed without\n#: really changing its hue and saturation.\n\n#: A value with the suffix % represents the minimum accepted\n#: difference in luminance between the foreground and background\n#: color, below which kitty will override the foreground color. It is\n#: percentage ranging from 0 % to 100 %. If the difference in\n#: luminance of the foreground and background is below this threshold,\n#: the foreground color will be set to white if the background is dark\n#: or black if the background is light.\n\n#: WARNING: Some programs use characters (such as block characters)\n#: for graphics display and may expect to be able to set the\n#: foreground and background to the same color (or similar colors). If\n#: you see unexpected stripes, dots, lines, incorrect color, no color\n#: where you expect color, or any kind of graphic display problem try\n#: setting text_fg_override_threshold to 0 to see if this is the cause\n#: of the problem or consider using the ratio mode of operation\n#: described above instead of the % mode of operation.\n\n#: }}}\n\n#: Text cursor customization {{{\n\n# cursor #cccccc\n\n#: Default text cursor color. If set to the special value none the\n#: cursor will be rendered with a \"reverse video\" effect. Its color\n#: will be the color of the text in the cell it is over and the text\n#: will be rendered with the background color of the cell. Note that\n#: if the program running in the terminal sets a cursor color, this\n#: takes precedence. Also, the cursor colors are modified if the cell\n#: background and foreground colors have very low contrast. Note that\n#: some themes set this value, so if you want to override it, place\n#: your value after the lines where the theme file is included.\n\n# cursor_text_color #111111\n\n#: The color of text under the cursor. If you want it rendered with\n#: the background color of the cell underneath instead, use the\n#: special keyword: `background`. Note that if cursor is set to none\n#: then this option is ignored. Note that some themes set this value,\n#: so if you want to override it, place your value after the lines\n#: where the theme file is included.\n\n# cursor_shape block\n\n#: The cursor shape can be one of block, beam, underline. Note that\n#: when reloading the config this will be changed only if the cursor\n#: shape has not been set by the program running in the terminal. This\n#: sets the default cursor shape, applications running in the terminal\n#: can override it. In particular, shell integration\n#: <https://sw.kovidgoyal.net/kitty/shell-integration/> in kitty sets\n#: the cursor shape to beam at shell prompts. You can avoid this by\n#: setting shell_integration to no-cursor.\n\n# cursor_shape_unfocused hollow\n\n#: Defines the text cursor shape when the OS window is not focused.\n#: The unfocused cursor shape can be one of block, beam, underline,\n#: hollow and unchanged (leave the cursor shape as it is).\n\n# cursor_beam_thickness 1.5\n\n#: The thickness of the beam cursor (in pts).\n\n# cursor_underline_thickness 2.0\n\n#: The thickness of the underline cursor (in pts).\n\n# cursor_blink_interval -1\n\n#: The interval to blink the cursor (in seconds). Set to zero to\n#: disable blinking. Negative values mean use system default. Note\n#: that the minimum interval will be limited to repaint_delay. You can\n#: also animate the cursor blink by specifying an easing function. For\n#: example, setting this to option to 0.5 ease-in-out will cause the\n#: cursor blink to be animated over a second, in the first half of the\n#: second it will go from opaque to transparent and then back again\n#: over the next half. You can specify different easing functions for\n#: the two halves, for example: -1 linear ease-out. kitty supports all\n#: the CSS easing functions <https://developer.mozilla.org/en-\n#: US/docs/Web/CSS/easing-function>. Note that turning on animations\n#: uses extra power as it means the screen is redrawn multiple times\n#: per blink interval. See also, cursor_stop_blinking_after. This\n#: setting also controls blinking text, which blinks in exact rhythm\n#: with the cursor.\n\n# cursor_stop_blinking_after 15.0\n\n#: Stop blinking cursor after the specified number of seconds of\n#: keyboard inactivity. Set to zero to never stop blinking. This\n#: setting also controls blinking text, which blinks in exact rhythm\n#: with the cursor.\n\n# cursor_trail 0\n\n#: Set this to a value larger than zero to enable a \"cursor trail\"\n#: animation. This is an animation that shows a \"trail\" following the\n#: movement of the text cursor. It makes it easy to follow large\n#: cursor jumps and makes for a cool visual effect of the cursor\n#: zooming around the screen. The actual value of this option controls\n#: when the animation is triggered. It is a number of milliseconds.\n#: The trail animation only follows cursors that have stayed in their\n#: position for longer than the specified number of milliseconds. This\n#: prevents trails from appearing for cursors that rapidly change\n#: their positions during UI updates in complex applications. See\n#: cursor_trail_decay to control the animation speed and\n#: cursor_trail_start_threshold to control when a cursor trail is\n#: started.\n\n# cursor_trail_decay 0.1 0.4\n\n#: Controls the decay times for the cursor trail effect when the\n#: cursor_trail is enabled. This option accepts two positive float\n#: values specifying the fastest and slowest decay times in seconds.\n#: The first value corresponds to the fastest decay time (minimum),\n#: and the second value corresponds to the slowest decay time\n#: (maximum). The second value must be equal to or greater than the\n#: first value. Smaller values result in a faster decay of the cursor\n#: trail. Adjust these values to control how quickly the cursor trail\n#: fades away.\n\n# cursor_trail_start_threshold 2\n\n#: Set the distance threshold for starting the cursor trail. This\n#: option accepts a positive integer value that represents the minimum\n#: number of cells the cursor must move before the trail is started.\n#: When the cursor moves less than this threshold, the trail is\n#: skipped, reducing unnecessary cursor trail animation.\n\n# cursor_trail_color none\n\n#: Set the color of the cursor trail when cursor_trail is enabled. If\n#: set to 'none' (the default), the cursor trail will use the cursor's\n#: background color. Otherwise, specify a color value (e.g., #ff0000\n#: for red, or a named color like 'red'). This allows you to customize\n#: the appearance of the cursor trail independently of the cursor\n#: color.\n\n#: }}}\n\n#: Scrollback {{{\n\n# scrollback_lines 2000\n\n#: Number of lines of history to keep in memory for scrolling back.\n#: Memory is allocated on demand. Negative numbers are (effectively)\n#: infinite scrollback. Note that using very large scrollback is not\n#: recommended as it can slow down performance of the terminal and\n#: also use large amounts of RAM. Instead, consider using\n#: scrollback_pager_history_size. Note that on config reload if this\n#: is changed it will only affect newly created windows, not existing\n#: ones.\n\n# scrollbar scrolled\n\n#: Control when the scrollbar is displayed.\n\n#: scrolled\n#:     means when the scrolling backwards has started.\n#: hovered\n#:     means when the mouse is hovering on the right edge of the window.\n#: scrolled-and-hovered\n#:     means when the mouse is over the scrollbar region *and* scrolling backwards has started.\n#: always\n#:     means whenever any scrollback is present\n#: never\n#:     means disable the scrollbar.\n\n# scrollbar_interactive yes\n\n#: If disabled, the scrollbar will not be controllable via th emouse\n#: and all mouse events will pass through the scrollbar.\n\n# scrollbar_jump_on_click yes\n\n#: When enabled clicking in the scrollbar track will cause the scroll\n#: position to jump to the clicked location, otherwise the scroll\n#: position will only move towards the position by a single screenful,\n#: which is how traditional scrollbars behave.\n\n# scrollbar_width 0.5\n\n#: The width of the scroll bar in units of cell width.\n\n# scrollbar_hover_width 1\n\n#: The width of the scroll bar when the mouse is hovering over it, in\n#: units of cell width.\n\n# scrollbar_handle_opacity 0.5\n\n#: The opacity of the scrollbar handle, 0 being fully transparent and\n#: 1 being full opaque.\n\n# scrollbar_radius 0.3\n\n#: The radius (curvature) of the scrollbar handle in units of cell\n#: width. Should be less than scrollbar_width.\n\n# scrollbar_gap 0.1\n\n#: The gap between the scrollbar and the window edge in units of cell\n#: width.\n\n# scrollbar_min_handle_height 1\n\n#: The minimum height of the scrollbar handle in units of cell height.\n#: Prevents the handle from becoming too small when there is a lot of\n#: scrollback.\n\n# scrollbar_hitbox_expansion 0.25\n\n#: The extra area around the handle to allow easier grabbing of the\n#: scollbar in units of cell width.\n\n# scrollbar_track_opacity 0\n\n#: The opacity of the scrollbar track, 0 being fully transparent and 1\n#: being full opaque.\n\n# scrollbar_track_hover_opacity 0.1\n\n#: The opacity of the scrollbar track when the mouse is over the\n#: scrollbar, 0 being fully transparent and 1 being full opaque.\n\n# scrollbar_handle_color foreground\n\n#: The color of the scrollbar handle. A value of foreground means to\n#: use the current foreground text color, a value of\n#: selection_background means to use the current selection background\n#: color. Also, you can use an arbitrary color, such as #12af59 or\n#: red.\n\n# scrollbar_track_color foreground\n\n#: The color of the scrollbar track. A value of foreground means to\n#: use the current foreground text color, a value of\n#: selection_background means to use the current selection background\n#: color. Also, you can use an arbitrary color, such as #12af59 or\n#: red.\n\n# scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER\n\n#: Program with which to view scrollback in a new window. The\n#: scrollback buffer is passed as STDIN to this program. If you change\n#: it, make sure the program you use can handle ANSI escape sequences\n#: for colors and text formatting. INPUT_LINE_NUMBER in the command\n#: line above will be replaced by an integer representing which line\n#: should be at the top of the screen. Similarly CURSOR_LINE and\n#: CURSOR_COLUMN will be replaced by the current cursor position or\n#: set to 0 if there is no cursor, for example, when showing the last\n#: command output.\n\n#: If you would rather use neovim to view the scrollback, use\n#: something like this::\n\n#:     scrollback_pager nvim --cmd 'set eventignore=FileType' +'nnoremap q ZQ' +'call nvim_open_term(0, {})' +'set nomodified nolist' +'$' -\n\n#: The above works for neovim 0.12 and newer. There is also a\n#: dedicated plugin kitty-scrollback.nvim\n#: <https://github.com/mikesmithgh/kitty-scrollback.nvim> you can use\n#: with more features that works with older neovim as well.\n\n# scrollback_pager_history_size 0\n\n#: Separate scrollback history size (in MB), used only for browsing\n#: the scrollback buffer with pager. This separate buffer is not\n#: available for interactive scrolling but will be piped to the pager\n#: program when viewing scrollback buffer in a separate window. The\n#: current implementation stores the data in UTF-8, so approximately\n#: 10000 lines per megabyte at 100 chars per line, for pure ASCII,\n#: unformatted text. A value of zero or less disables this feature.\n#: The maximum allowed size is 4GB. Note that on config reload if this\n#: is changed it will only affect newly created windows, not existing\n#: ones.\n\n# scrollback_fill_enlarged_window no\n\n#: Fill new space with lines from the scrollback buffer after\n#: enlarging a window.\n\n# wheel_scroll_multiplier 5.0\n\n#: Multiplier for the number of lines scrolled by the mouse wheel.\n#: Note that this is only used for low precision scrolling devices,\n#: not for high precision scrolling devices on platforms such as macOS\n#: and Wayland. Use negative numbers to change scroll direction. See\n#: also wheel_scroll_min_lines.\n\n# wheel_scroll_min_lines 1\n\n#: The minimum number of lines scrolled by the mouse wheel. The scroll\n#: multiplier wheel_scroll_multiplier only takes effect after it\n#: reaches this number. Note that this is only used for low precision\n#: scrolling devices like wheel mice that scroll by very small amounts\n#: when using the wheel. With a negative number, the minimum number of\n#: lines will always be added.\n\n# touch_scroll_multiplier 1.0\n\n#: Multiplier for the number of lines scrolled by a touchpad. Note\n#: that this is only used for high precision scrolling devices on\n#: platforms such as macOS and Wayland. Use negative numbers to change\n#: scroll direction.\n\n#: }}}\n\n#: Mouse {{{\n\n# mouse_hide_wait 3.0\n\n#: Hide mouse cursor after the specified number of seconds of the\n#: mouse not being used. Set to zero to disable mouse cursor hiding.\n#: Set to a negative value to hide the mouse cursor immediately when\n#: typing text. Disabled by default on macOS as getting it to work\n#: robustly with the ever-changing sea of bugs that is Cocoa is too\n#: much effort.\n\n#: By default, once the cursor is hidden, it is immediately unhidden\n#: on any further mouse events.\n\n#: Two formats are supported:\n#:  - <hide-wait>\n#:  - <hide-wait> <unhide-wait> <unhide-threshold> <scroll-unhide>\n\n#: To change the unhide behavior, the optional parameters <unhide-\n#: wait>, <unhide-threshold>, and <scroll-unhide> may be set.\n\n#: <unhide-wait>\n#:     Waits for the specified number of seconds after mouse events before unhiding the\n#:     mouse cursor. Set to zero to unhide mouse cursor immediately on mouse activity.\n#:     This is useful to prevent the mouse cursor from unhiding on accidental swipes on\n#:     the trackpad.\n\n#: <unhide-threshold>\n#:     Sets the threshold of mouse activity required to unhide the mouse cursor, when\n#:     the <unhide-wait> option is non-zero. When <unhide-wait> is zero, this has no\n#:     effect.\n\n#:     For example, if <unhide-threshold> is 40 and <unhide-wait> is 2.5, when kitty\n#:     detects a mouse event, it records the number of mouse events in the next 2.5\n#:     seconds, and checks if that exceeds 40 * 2.5 = 100. If it does, then the mouse\n#:     cursor is unhidden, otherwise nothing happens.\n\n#: <scroll-unhide>\n#:     Controls what mouse events may unhide the mouse cursor. If enabled, both scroll\n#:     and movement events may unhide the cursor. If disabled, only mouse movements can\n#:     unhide the cursor.\n\n#: Examples of valid values:\n#:  - 0.0\n#:  - 1.0\n#:  - -1.0\n#:  - 0.1 3.0 40 yes\n\n# url_color #0087bd\n# url_style curly\n\n#: The color and style for highlighting URLs on mouse-over. url_style\n#: can be one of: none, straight, double, curly, dotted, dashed.\n\n# open_url_with default\n\n#: The program to open clicked URLs. The special value default will\n#: first look for any URL handlers defined via the open_actions\n#: <https://sw.kovidgoyal.net/kitty/open_actions/> facility and if non\n#: are found, it will use the Operating System's default URL handler\n#: (open on macOS and xdg-open on Linux).\n\n# url_prefixes file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh\n\n#: The set of URL prefixes to look for when detecting a URL under the\n#: mouse cursor.\n\n# detect_urls yes\n\n#: Detect URLs under the mouse. Detected URLs are highlighted with an\n#: underline and the mouse cursor becomes a hand over them. Even if\n#: this option is disabled, URLs are still clickable. See also the\n#: underline_hyperlinks option to control how hyperlinks (as opposed\n#: to plain text URLs) are displayed.\n\n# url_excluded_characters\n\n#: Additional characters to be disallowed from URLs, when detecting\n#: URLs under the mouse cursor. By default, all characters that are\n#: legal in URLs are allowed. Additionally, newlines are allowed (but\n#: stripped). This is to accommodate programs such as mutt that add\n#: hard line breaks even for continued lines. \\n can be added to this\n#: option to disable this behavior. Special characters can be\n#: specified using backslash escapes, to specify a backslash use a\n#: double backslash.\n\n# show_hyperlink_targets no\n\n#: When the mouse hovers over a terminal hyperlink, show the actual\n#: URL that will be activated when the hyperlink is clicked.\n\n# underline_hyperlinks hover\n\n#: Control how hyperlinks are underlined. They can either be\n#: underlined on mouse hover, always (i.e. permanently underlined) or\n#: never which means that kitty will not apply any underline styling\n#: to hyperlinks. Note that the value of always only applies to real\n#: (OSC 8) hyperlinks not text that is detected to be a URL on mouse\n#: hover. Uses the url_style and url_color settings for the underline\n#: style. Note that reloading the config and changing this value\n#: to/from always will only affect text subsequently received by\n#: kitty.\n\n# copy_on_select no\n\n#: Copy to clipboard or a private buffer on select. With this set to\n#: clipboard, selecting text with the mouse will cause the text to be\n#: copied to clipboard. Useful on platforms such as macOS that do not\n#: have the concept of primary selection. You can instead specify a\n#: name such as a1 to copy to a private kitty buffer. Map a shortcut\n#: with the paste_from_buffer action to paste from this private\n#: buffer. For example::\n\n#:     copy_on_select a1\n#:     map shift+cmd+v paste_from_buffer a1\n\n#: Note that copying to the clipboard is a security risk, as all\n#: programs, including websites open in your browser can read the\n#: contents of the system clipboard.\n\n# clear_selection_on_clipboard_loss no\n\n#: When the contents of the clipboard no longer reflect the current\n#: selection, clear it. This is primarily useful on platforms such as\n#: Linux where selecting text automatically copies it to a special\n#: \"primary selection\" clipboard or if you have copy_on_select set to\n#: clipboard.\n\n#: Note that on macOS the system does not provide notifications when\n#: the clipboard owner is changed, so there, copying to clipboard in a\n#: non-kitty application will not clear selections even if\n#: copy_on_select is enabled.\n\n# paste_actions quote-urls-at-prompt,confirm\n\n#: A comma separated list of actions to take when pasting text into\n#: the terminal. The supported paste actions are:\n\n#: quote-urls-at-prompt:\n#:     If the text being pasted is a URL and the cursor is at a shell prompt,\n#:     automatically quote the URL (needs shell_integration).\n#: replace-dangerous-control-codes\n#:     Replace dangerous control codes from pasted text, without confirmation.\n#: replace-newline\n#:     Replace the newline character from pasted text, without confirmation.\n#: confirm:\n#:     Confirm the paste if the text to be pasted contains any terminal control codes\n#:     as this can be dangerous, leading to code execution if the shell/program running\n#:     in the terminal does not properly handle these.\n#: confirm-if-large\n#:     Confirm the paste if it is very large (larger than 16KB) as pasting\n#:     large amounts of text into shells can be very slow.\n#: filter:\n#:     Run the filter_paste() function from the file paste-actions.py in\n#:     the kitty config directory on the pasted text. The text returned by the\n#:     function will be actually pasted.\n#: no-op:\n#:     Has no effect.\n\n# strip_trailing_spaces never\n\n#: Remove spaces at the end of lines when copying to clipboard. A\n#: value of smart will do it when using normal selections, but not\n#: rectangle selections. A value of always will always do it.\n\n# select_by_word_characters @-./_~?&=%+#\n\n#: Characters considered part of a word when double clicking. In\n#: addition to these characters any character that is marked as an\n#: alphanumeric character in the Unicode database will be matched.\n\n# select_by_word_characters_forward\n\n#: Characters considered part of a word when extending the selection\n#: forward on double clicking. In addition to these characters any\n#: character that is marked as an alphanumeric character in the\n#: Unicode database will be matched.\n\n#: If empty (default) select_by_word_characters will be used for both\n#: directions.\n\n# click_interval -1.0\n\n#: The interval between successive clicks to detect double/triple\n#: clicks (in seconds). Negative numbers will use the system default\n#: instead, if available, or fallback to 0.5.\n\n# focus_follows_mouse no\n\n#: Set the active window to the window under the mouse when moving the\n#: mouse around. On macOS, this will also cause the OS Window under\n#: the mouse to be focused automatically when the mouse enters it.\n\n# pointer_shape_when_grabbed arrow\n\n#: The shape of the mouse pointer when the program running in the\n#: terminal grabs the mouse.\n\n# default_pointer_shape beam\n\n#: The default shape of the mouse pointer.\n\n# pointer_shape_when_dragging beam crosshair\n\n#: The default shape of the mouse pointer when dragging across text.\n#: The optional second value sets the shape when dragging in\n#: rectangular selection mode.\n\n#: Mouse actions {{{\n\n#: Mouse buttons can be mapped to perform arbitrary actions. The\n#: syntax is:\n\n#: .. code-block:: none\n\n#:     mouse_map button-name event-type modes action\n\n#: Where button-name is one of left, middle, right, b1 ... b8 with\n#: added keyboard modifiers. For example: ctrl+shift+left refers to\n#: holding the Ctrl+Shift keys while clicking with the left mouse\n#: button. The value b1 ... b8 can be used to refer to up to eight\n#: buttons on a mouse.\n\n#: event-type is one of press, release, doublepress, triplepress,\n#: click, doubleclick. modes indicates whether the action is performed\n#: when the mouse is grabbed by the program running in the terminal,\n#: or not. The values are grabbed or ungrabbed or a comma separated\n#: combination of them. grabbed refers to when the program running in\n#: the terminal has requested mouse events. Note that the click and\n#: double click events have a delay of click_interval to disambiguate\n#: from double and triple presses.\n\n#: You can run kitty with the kitty --debug-input command line option\n#: to see mouse events. See the builtin actions below to get a sense\n#: of what is possible.\n\n#: If you want to unmap a button, map it to nothing. For example, to\n#: disable opening of URLs with a plain click::\n\n#:     mouse_map left click ungrabbed\n\n#: See all the mappable actions including mouse actions here\n#: <https://sw.kovidgoyal.net/kitty/actions/>.\n\n#: .. note::\n#:     Once a selection is started, releasing the button that started it will\n#:     automatically end it and no release event will be dispatched.\n\n# clear_all_mouse_actions no\n\n#: Remove all mouse action definitions up to this point. Useful, for\n#: instance, to remove the default mouse actions.\n\n#: Click the link under the mouse or move the cursor\n\n# mouse_map left click ungrabbed mouse_handle_click selection link prompt\n\n#::  First check for a selection and if one exists do nothing. Then\n#::  check for a link under the mouse cursor and if one exists, click\n#::  it. Finally check if the click happened at the current shell\n#::  prompt and if so, move the cursor to the click location. Note\n#::  that this requires shell integration\n#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.\n\n#: Click the link under the mouse or move the cursor even when grabbed\n\n# mouse_map shift+left click grabbed,ungrabbed mouse_handle_click selection link prompt\n\n#::  Same as above, except that the action is performed even when the\n#::  mouse is grabbed by the program running in the terminal.\n\n#: Click the link under the mouse cursor\n\n# mouse_map ctrl+shift+left release grabbed,ungrabbed mouse_handle_click link\n\n#::  Variant with Ctrl+Shift is present because the simple click based\n#::  version has an unavoidable delay of click_interval, to\n#::  disambiguate clicks from double clicks.\n\n#: Discard press event for link click\n\n# mouse_map ctrl+shift+left press grabbed discard_event\n\n#::  Prevent this press event from being sent to the program that has\n#::  grabbed the mouse, as the corresponding release event is used to\n#::  open a URL.\n\n#: Paste from the primary selection\n\n# mouse_map middle release ungrabbed paste_from_selection\n\n#: Start selecting text\n\n# mouse_map left press ungrabbed mouse_selection normal\n\n#: Start selecting text in a rectangle\n\n# mouse_map ctrl+alt+left press ungrabbed mouse_selection rectangle\n\n#: Select a word\n\n# mouse_map left doublepress ungrabbed mouse_selection word\n\n#: Select a line\n\n# mouse_map left triplepress ungrabbed mouse_selection line\n\n#: Select line from point\n\n# mouse_map ctrl+alt+left triplepress ungrabbed mouse_selection line_from_point\n\n#::  Select from the clicked point to the end of the line. If you\n#::  would like to select the word at the point and then extend to the\n#::  rest of the line, change `line_from_point` to\n#::  `word_and_line_from_point`.\n\n#: Extend the current selection\n\n# mouse_map right press ungrabbed mouse_selection extend\n\n#::  If you want only the end of the selection to be moved instead of\n#::  the nearest boundary, use move-end instead of extend.\n\n#: Paste from the primary selection even when grabbed\n\n# mouse_map shift+middle release ungrabbed,grabbed paste_selection\n# mouse_map shift+middle press grabbed discard_event\n\n#: Start selecting text even when grabbed\n\n# mouse_map shift+left press ungrabbed,grabbed mouse_selection normal\n\n#: Start selecting text in a rectangle even when grabbed\n\n# mouse_map ctrl+shift+alt+left press ungrabbed,grabbed mouse_selection rectangle\n\n#: Select a word even when grabbed\n\n# mouse_map shift+left doublepress ungrabbed,grabbed mouse_selection word\n\n#: Select a line even when grabbed\n\n# mouse_map shift+left triplepress ungrabbed,grabbed mouse_selection line\n\n#: Select line from point even when grabbed\n\n# mouse_map ctrl+shift+alt+left triplepress ungrabbed,grabbed mouse_selection line_from_point\n\n#::  Select from the clicked point to the end of the line even when\n#::  grabbed. If you would like to select the word at the point and\n#::  then extend to the rest of the line, change `line_from_point` to\n#::  `word_and_line_from_point`.\n\n#: Extend the current selection even when grabbed\n\n# mouse_map shift+right press ungrabbed,grabbed mouse_selection extend\n\n#: Show clicked command output in pager\n\n# mouse_map ctrl+shift+right press ungrabbed mouse_show_command_output\n\n#::  Requires shell integration\n#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.\n\n#: }}}\n\n#: }}}\n\n#: Performance tuning {{{\n\n# repaint_delay 10\n\n#: Delay between screen updates (in milliseconds). Decreasing it,\n#: increases frames-per-second (FPS) at the cost of more CPU usage.\n#: The default value yields ~100 FPS which is more than sufficient for\n#: most uses. Note that to actually achieve 100 FPS, you have to\n#: either set sync_to_monitor to no or use a monitor with a high\n#: refresh rate. Also, to minimize latency when there is pending input\n#: to be processed, this option is ignored.\n\n# input_delay 3\n\n#: Delay before input from the program running in the terminal is\n#: processed (in milliseconds). Note that decreasing it will increase\n#: responsiveness, but also increase CPU usage and might cause flicker\n#: in full screen programs that redraw the entire screen on each loop,\n#: because kitty is so fast that partial screen updates will be drawn.\n#: This setting is ignored when the input buffer is almost full.\n\n# sync_to_monitor yes\n\n#: Sync screen updates to the refresh rate of the monitor. This\n#: prevents screen tearing\n#: <https://en.wikipedia.org/wiki/Screen_tearing> when scrolling.\n#: However, it limits the rendering speed to the refresh rate of your\n#: monitor. With a very high speed mouse/high keyboard repeat rate,\n#: you may notice some slight input latency. If so, set this to no.\n\n#: }}}\n\n#: Terminal bell {{{\n\n# enable_audio_bell yes\n\n#: The audio bell. Useful to disable it in environments that require\n#: silence.\n\n# visual_bell_duration 0.0\n\n#: The visual bell duration (in seconds). Flash the screen when a bell\n#: occurs for the specified number of seconds. Set to zero to disable.\n#: The flash is animated, fading in and out over the specified\n#: duration. The easing function used for the fading can be\n#: controlled. For example, 2.0 linear will casuse the flash to fade\n#: in and out linearly. The default if unspecified is to use ease-in-\n#: out which fades slowly at the start, middle and end. You can\n#: specify different easing functions for the fade-in and fade-out\n#: parts, like this: 2.0 ease-in linear. kitty supports all the CSS\n#: easing functions <https://developer.mozilla.org/en-\n#: US/docs/Web/CSS/easing-function>.\n\n# visual_bell_color none\n\n#: The color used by visual bell. Set to none will fall back to\n#: selection background color. If you feel that the visual bell is too\n#: bright, you can set it to a darker color.\n\n# window_alert_on_bell yes\n\n#: Request window attention on bell. Makes the dock icon bounce on\n#: macOS or the taskbar flash on Linux.\n\n# bell_on_tab \"🔔 \"\n\n#: Some text or a Unicode symbol to show on the tab if a window in the\n#: tab that does not have focus has a bell. If you want to use leading\n#: or trailing spaces, surround the text with quotes. See\n#: tab_title_template for how this is rendered.\n\n#: For backwards compatibility, values of yes, y and true are\n#: converted to the default bell symbol and no, n, false and none are\n#: converted to the empty string.\n\n# command_on_bell none\n\n#: Program to run when a bell occurs. The environment variable\n#: KITTY_CHILD_CMDLINE can be used to get the program running in the\n#: window in which the bell occurred.\n\n# bell_path none\n\n#: Path to a sound file to play as the bell sound. If set to none, the\n#: system default bell sound is used. Must be in a format supported by\n#: the operating systems sound API, such as WAV or OGA on Linux\n#: (libcanberra) or AIFF, MP3 or WAV on macOS (NSSound). Relative\n#: paths are resolved with respect to the kitty config directory.\n\n# linux_bell_theme __custom\n\n#: The XDG Sound Theme kitty will use to play the bell sound. On\n#: Wayland, when the compositor supports it, it is asked to play the\n#: system default bell sound, and this setting has no effect. Note\n#: that Hyprland claims to support this protocol, but does not\n#: actually play a sound\n#: <https://github.com/hyprwm/Hyprland/issues/10488>. This setting\n#: defaults to the custom theme name specified in the XDG Sound theme\n#: specification <https://specifications.freedesktop.org/sound-theme-\n#: spec/latest/sound_lookup.html>, falling back to the default\n#: freedesktop theme if it does not exist. To change your sound theme\n#: desktop wide, create\n#: :file:~/.local/share/sounds/__custom/index.theme` with the\n#: contents:\n\n#:     [Sound Theme]\n\n#:     Inherits=name-of-the-sound-theme-you-want-to-use\n\n#: Replace name-of-the-sound-theme-you-want-to-use with the actual\n#: theme name. Now all compliant applications should use sounds from\n#: this theme.\n\n#: }}}\n\n#: Window layout {{{\n\n# remember_window_size  yes\n# initial_window_width  640\n# initial_window_height 400\n\n#: If enabled, the OS Window size will be remembered so that new\n#: instances of kitty will have the same size as the previous\n#: instance. If disabled, the OS Window will initially have size\n#: configured by initial_window_width/height, in pixels. You can use a\n#: suffix of \"c\" on the width/height values to have them interpreted\n#: as number of cells instead of pixels.\n\n# remember_window_position no\n\n#: If enabled, the OS Window position will be remembered so that new\n#: instances of kitty will have the same position as the previous\n#: instance. If disabled, the OS Window will be placed by the window\n#: manager. Note that remembering of position only works if the\n#: underlying desktop environment/window manager supports it. It never\n#: works on Wayland. See also kitty --position to specify the position\n#: when launching kitty.\n\n# enabled_layouts *\n\n#: The enabled window layouts. A comma separated list of layout names.\n#: The special value all means all layouts. The first listed layout\n#: will be used as the startup layout. Default configuration is all\n#: layouts in alphabetical order. For a list of available layouts, see\n#: the layouts <https://sw.kovidgoyal.net/kitty/overview/#layouts>.\n\n# window_resize_step_cells 2\n# window_resize_step_lines 2\n\n#: The step size (in units of cell width/cell height) to use when\n#: resizing kitty windows in a layout with the shortcut\n#: start_resizing_window. The cells value is used for horizontal\n#: resizing, and the lines value is used for vertical resizing.\n\n# window_border_width 0.5pt\n\n#: The width of window borders. Can be either in pixels (px) or pts\n#: (pt). Values in pts will be rounded to the nearest number of pixels\n#: based on screen resolution. If not specified, the unit is assumed\n#: to be pts. Note that borders are displayed only when more than one\n#: window is visible. They are meant to separate multiple windows.\n\n# draw_minimal_borders yes\n\n#: Draw only the minimum borders needed. This means that only the\n#: borders that separate the window from a neighbor are drawn. Note\n#: that setting a non-zero window_margin_width overrides this and\n#: causes all borders to be drawn.\n\n# draw_window_borders_for_single_window no\n\n#: Draw borders around a window even when there is only a single\n#: window visible. When enabled and there is only a single window,\n#: full borders are drawn around it (as if draw_minimal_borders is\n#: false). The border will show in the active color when the window is\n#: focused and the OS window has focus, and in the inactive color when\n#: the OS window loses focus. This provides a clear visual indicator\n#: of whether the kitty window is focused. When there are multiple\n#: windows visible, this option has no effect and normal border\n#: drawing rules apply.\n\n# window_margin_width 0\n\n#: The window margin (in pts) (blank area outside the border). A\n#: single value sets all four sides. Two values set the vertical and\n#: horizontal sides. Three values set top, horizontal and bottom. Four\n#: values set top, right, bottom and left.\n\n# single_window_margin_width -1\n\n#: The window margin to use when only a single window is visible (in\n#: pts). Negative values will cause the value of window_margin_width\n#: to be used instead. A single value sets all four sides. Two values\n#: set the vertical and horizontal sides. Three values set top,\n#: horizontal and bottom. Four values set top, right, bottom and left.\n\n# window_padding_width 0\n\n#: The window padding (in pts) (blank area between the text and the\n#: window border). A single value sets all four sides. Two values set\n#: the vertical and horizontal sides. Three values set top, horizontal\n#: and bottom. Four values set top, right, bottom and left.\n\n# single_window_padding_width -1\n\n#: The window padding to use when only a single window is visible (in\n#: pts). Negative values will cause the value of window_padding_width\n#: to be used instead. A single value sets all four sides. Two values\n#: set the vertical and horizontal sides. Three values set top,\n#: horizontal and bottom. Four values set top, right, bottom and left.\n\n# placement_strategy center\n\n#: When the window size is not an exact multiple of the cell size, the\n#: cell area of the terminal window will have some extra padding on\n#: the sides. You can control how that padding is distributed with\n#: this option. Using a value of center means the cell area will be\n#: placed centrally. A value of top-left means the padding will be\n#: only at the bottom and right edges. The value can be one of: top-\n#: left, top, top-right, left, center, right, bottom-left, bottom,\n#: bottom-right.\n\n# active_border_color #00ff00\n\n#: The color for the border of the active window. Set this to none to\n#: not draw borders around the active window.\n\n# inactive_border_color #cccccc\n\n#: The color for the border of inactive windows.\n\n# bell_border_color #ff5a00\n\n#: The color for the border of inactive windows in which a bell has\n#: occurred.\n\n# inactive_text_alpha 1.0\n\n#: Fade the text in inactive windows by the specified amount (a number\n#: between zero and one, with zero being fully faded).\n\n# hide_window_decorations no\n\n#: Hide the window decorations (title-bar and window borders) with\n#: yes. On macOS, titlebar-only and titlebar-and-corners can be used\n#: to only hide the titlebar and the rounded corners. Whether this\n#: works and exactly what effect it has depends on the window\n#: manager/operating system. Note that the effects of changing this\n#: option when reloading config are undefined. When using titlebar-\n#: only, it is useful to also set window_margin_width and\n#: placement_strategy to prevent the rounded corners from clipping\n#: text. Or use titlebar-and-corners.\n\n# window_logo_path none\n\n#: Path to a logo image. Must be in PNG/JPEG/WEBP/GIF/TIFF/BMP format.\n#: Relative paths are interpreted relative to the kitty config\n#: directory. The logo is displayed in a corner of every kitty window.\n#: The position is controlled by window_logo_position. Individual\n#: windows can be configured to have different logos either using the\n#: launch action or the remote control\n#: <https://sw.kovidgoyal.net/kitty/remote-control/> facility.\n\n# window_logo_position bottom-right\n\n#: Where to position the window logo in the window. The value can be\n#: one of: top-left, top, top-right, left, center, right, bottom-left,\n#: bottom, bottom-right.\n\n# window_logo_alpha 0.5\n\n#: The amount the logo should be faded into the background. With zero\n#: being fully faded and one being fully opaque.\n\n# window_logo_scale 0\n\n#: The percentage (0-100] of the window size to which the logo should\n#: scale. Using a single number means the logo is scaled to that\n#: percentage of the shortest window dimension, while preserving\n#: aspect ratio of the logo image.\n\n#: Using two numbers means the width and height of the logo are scaled\n#: to the respective percentage of the window's width and height.\n\n#: Using zero as the percentage disables scaling in that dimension. A\n#: single zero (the default) disables all scaling of the window logo.\n\n# resize_debounce_time 0.1 0.5\n\n#: The time to wait (in seconds) before asking the program running in\n#: kitty to resize and redraw the screen during a live resize of the\n#: OS window, when no new resize events have been received, i.e. when\n#: resizing is either paused or finished. On platforms such as macOS,\n#: where the operating system sends events corresponding to the start\n#: and end of a live resize, the second number is used for redraw-\n#: after-pause since kitty can distinguish between a pause and end of\n#: resizing. On such systems the first number is ignored and redraw is\n#: immediate after end of resize. On other systems only the first\n#: number is used so that kitty is \"ready\" quickly after the end of\n#: resizing, while not also continuously redrawing, to save energy.\n\n# resize_in_steps no\n\n#: Resize the OS window in steps as large as the cells, instead of\n#: with the usual pixel accuracy. Combined with initial_window_width\n#: and initial_window_height in number of cells, this option can be\n#: used to keep the margins as small as possible when resizing the OS\n#: window. Note that this does not currently work on Wayland.\n\n# visual_window_select_characters 1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\n#: The list of characters for visual window selection. For example,\n#: for selecting a window to focus on with focus_visible_window. The\n#: value should be a series of unique numbers or alphabets, case\n#: insensitive, from the set 0-9A-Z\\-=[];',./\\\\`. Specify your\n#: preference as a string of characters.\n\n# confirm_os_window_close -1\n\n#: Ask for confirmation when closing an OS window or a tab with at\n#: least this number of kitty windows in it by window manager (e.g.\n#: clicking the window close button or pressing the operating system\n#: shortcut to close windows) or by the close_tab action. A value of\n#: zero disables confirmation. This confirmation also applies to\n#: requests to quit the entire application (all OS windows, via the\n#: quit action). Negative values are converted to positive ones,\n#: however, with shell_integration enabled, using negative values\n#: means windows sitting at a shell prompt are not counted, only\n#: windows where some command is currently running. You can also have\n#: backgrounded jobs prevent closing, by adding count-background to\n#: the setting, for example: -1 count-background. Note that if you\n#: want confirmation when closing individual windows, you can map the\n#: close_window_with_confirmation action.\n\n#: }}}\n\n#: Tab bar {{{\n\n# tab_bar_edge bottom\n\n#: The edge to show the tab bar on, top or bottom.\n\n# tab_bar_margin_width 0.0\n\n#: The margin to the left and right of the tab bar (in pts).\n\n# tab_bar_margin_height 0.0 0.0\n\n#: The margin above and below the tab bar (in pts). The first number\n#: is the margin between the edge of the OS Window and the tab bar.\n#: The second number is the margin between the tab bar and the\n#: contents of the current tab.\n\n# tab_bar_style fade\n\n#: The tab bar style, can be one of:\n\n#: fade\n#:     Each tab's edges fade into the background color. (See also tab_fade)\n#: slant\n#:     Tabs look like the tabs in a physical file.\n#: separator\n#:     Tabs are separated by a configurable separator. (See also\n#:     tab_separator)\n#: powerline\n#:     Tabs are shown as a continuous line with \"fancy\" separators.\n#:     (See also tab_powerline_style)\n#: custom\n#:     A user-supplied Python function called draw_tab is loaded from the file\n#:     tab_bar.py in the kitty config directory. For examples of how to\n#:     write such a function, see the functions named draw_tab_with_* in\n#:     kitty's source code: kitty/tab_bar.py. See also\n#:     this discussion <https://github.com/kovidgoyal/kitty/discussions/4447>\n#:     for examples from kitty users.\n#: hidden\n#:     The tab bar is hidden. If you use this, you might want to create\n#:     a mapping for the select_tab action which presents you with a list of\n#:     tabs and allows for easy switching to a tab.\n\n# tab_bar_filter\n\n#: A search expression <https://sw.kovidgoyal.net/kitty/remote-\n#: control/#search-syntax>. Only tabs that match this expression will\n#: be shown in the tab bar. The currently active tab is always shown,\n#: regardless of whether it matches or not. When using this option,\n#: the tab bar may be displayed with less tabs than specified in\n#: tab_bar_min_tabs, as evaluating the filter is expensive and is done\n#: only at display time. This is most useful when using sessions\n#: <https://sw.kovidgoyal.net/kitty/sessions/>. An expression of\n#: session:~ or session:^$ will show only tabs that belong to the\n#: current session or no session. The various tab navigation actions\n#: such as goto_tab, next_tab, previous_tab, etc. are automatically\n#: restricted to work only on matching tabs.\n\n# tab_bar_align left\n\n#: The horizontal alignment of the tab bar, can be one of: left,\n#: center, right.\n\n# tab_bar_min_tabs 2\n\n#: The minimum number of tabs that must exist before the tab bar is\n#: shown.\n\n# tab_switch_strategy previous\n\n#: The algorithm to use when switching to a tab when the current tab\n#: is closed. The default of previous will switch to the last used\n#: tab. A value of left will switch to the tab to the left of the\n#: closed tab. A value of right will switch to the tab to the right of\n#: the closed tab. A value of last will switch to the right-most tab.\n\n# tab_fade 0.25 0.5 0.75 1\n\n#: Control how each tab fades into the background when using fade for\n#: the tab_bar_style. Each number is an alpha (between zero and one)\n#: that controls how much the corresponding cell fades into the\n#: background, with zero being no fade and one being full fade. You\n#: can change the number of cells used by adding/removing entries to\n#: this list.\n\n# tab_separator \" ┇\"\n\n#: The separator between tabs in the tab bar when using separator as\n#: the tab_bar_style.\n\n# tab_powerline_style angled\n\n#: The powerline separator style between tabs in the tab bar when\n#: using powerline as the tab_bar_style, can be one of: angled,\n#: slanted, round.\n\n# tab_activity_symbol none\n\n#: Some text or a Unicode symbol to show on the tab if a window in the\n#: tab that does not have focus has some activity. If you want to use\n#: leading or trailing spaces, surround the text with quotes. See\n#: tab_title_template for how this is rendered.\n\n# tab_title_max_length 0\n\n#: The maximum number of cells that can be used to render the text in\n#: a tab. A value of zero means that no limit is applied.\n\n# tab_title_template \"{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{tab.last_focused_progress_percent}{title}\"\n\n#: A template to render the tab title. The default just renders the\n#: title with optional symbols for bell and activity. If you wish to\n#: include the tab-index as well, use something like: {index}:{title}.\n#: Useful if you have shortcuts mapped for goto_tab N. If you prefer\n#: to see the index as a superscript, use {sup.index}. All data\n#: available is:\n\n#: title\n#:     The current tab title.\n#: index\n#:     The tab index usable with goto_tab N goto_tab shortcuts.\n#: layout_name\n#:     The current layout name.\n#: session_name\n#:     The name of the kitty session file from which this tab was created, if any.\n#: active_session_name\n#:     The name of the kitty session file from which the active window in this tab was created, if any.\n#: num_windows\n#:     The number of windows in the tab.\n#: num_window_groups\n#:     The number of window groups (a window group is a window and all of its overlay windows) in the tab.\n#: tab.active_wd\n#:     The working directory of the currently active window in the tab\n#:     (expensive, requires syscall). Use tab.active_oldest_wd to get\n#:     the directory of the oldest foreground process rather than the newest.\n#: tab.active_exe\n#:     The name of the executable running in the foreground of the currently\n#:     active window in the tab (expensive, requires syscall). Use\n#:     tab.active_oldest_exe for the oldest foreground process.\n#: max_title_length\n#:     The maximum title length available.\n#: keyboard_mode\n#:     The name of the current keyboard mode <https://sw.kovidgoyal.net/kitty/mapping/#modal-mappings> or the empty string if no keyboard mode is active.\n#: tab.last_focused_progress_percent\n#:     If a command running in a window reports the progress for a task, show this progress as a percentage\n#:     from the most recently focused window in the tab. Empty string if no progress is reported.\n#: tab.progress_percent\n#:     If a command running in a window reports the progress for a task, show this progress as a percentage\n#:     from all windows in the tab, averaged. Empty string is no progress is reported.\n#: custom\n#:     This will call a function named draw_title(data) from the file tab_bar.py placed in\n#:     the kitty config directory. The function will be passed a dictionary of data, the same data that\n#:     can be used in this template. It can then perform arbitrarily complex processing and return a string.\n#:     For example: tab_title_template \"{custom}\" will use the output of the function as the tab title.\n#:     Any print statements in the draw_title() will print to the STDOUT of the kitty process, useful\n#:     for debugging.\n\n\n#: Note that formatting is done by Python's string formatting\n#: machinery, so you can use, for instance, {layout_name[:2].upper()}\n#: to show only the first two letters of the layout name, upper-cased.\n#: If you want to style the text, you can use styling directives, for\n#: example:\n#: `{fmt.fg.red}red{fmt.fg.tab}normal{fmt.bg._00FF00}greenbg{fmt.bg.tab}`.\n#: Similarly, for bold and italic:\n#: `{fmt.bold}bold{fmt.nobold}normal{fmt.italic}italic{fmt.noitalic}`.\n#: The 256 eight terminal colors can be used as `fmt.fg.color0`\n#: through `fmt.fg.color255`. Note that for backward compatibility, if\n#: {bell_symbol} or {activity_symbol} are not present in the template,\n#: they are prepended to it.\n\n# active_tab_title_template none\n\n#: Template to use for active tabs. If not specified falls back to\n#: tab_title_template.\n\n# active_tab_foreground   #000\n# active_tab_background   #eee\n# active_tab_font_style   bold-italic\n# inactive_tab_foreground #444\n# inactive_tab_background #999\n# inactive_tab_font_style normal\n\n#: Tab bar colors and styles.\n\n# tab_bar_background none\n\n#: Background color for the tab bar. Defaults to using the terminal\n#: background color.\n\n# tab_bar_margin_color none\n\n#: Color for the tab bar margin area. Defaults to using the terminal\n#: background color for margins above and below the tab bar. For side\n#: margins the default color is chosen to match the background color\n#: of the neighboring tab.\n\n#: }}}\n\n#: Color scheme {{{\n\n# foreground #dddddd\n# background #000000\n\n#: The foreground and background colors.\n\n# background_opacity 1.0\n\n#: The opacity of the background. A number between zero and one, where\n#: one is opaque and zero is fully transparent. This will only work if\n#: supported by the OS (for instance, when using a compositor under\n#: X11). Note that it only sets the background color's opacity in\n#: cells that have the same background color as the default terminal\n#: background, so that things like the status bar in vim, powerline\n#: prompts, etc. still look good. But it means that if you use a color\n#: theme with a background color in your editor, it will not be\n#: rendered as transparent. Instead you should change the default\n#: background color in your kitty config and not use a background\n#: color in the editor color scheme. Or use the escape codes to set\n#: the terminals default colors in a shell script to launch your\n#: editor. See also transparent_background_colors. Be aware that using\n#: a value less than 1.0 is a (possibly significant) performance hit.\n#: When using a low value for this setting, it is desirable that you\n#: set the background color to a color the matches the general color\n#: of the desktop background, for best text rendering.\n\n#: If you want to dynamically change transparency of windows, set\n#: dynamic_background_opacity to yes (this is off by default as it has\n#: a performance cost). Changing this option when reloading the config\n#: will only work if dynamic_background_opacity was enabled in the\n#: original config.\n\n# background_blur 0\n\n#: Set to a positive value to enable background blur (blurring of the\n#: visuals behind a transparent window) on platforms that support it.\n#: Only takes effect when background_opacity is less than one. On\n#: macOS, this will also control the blur radius (amount of blurring).\n#: Setting it to too high a value will cause severe performance issues\n#: and/or rendering artifacts. Usually, values up to 64 work well.\n#: Note that this might cause performance issues, depending on how the\n#: platform implements it, so use with care. Currently supported on\n#: macOS and KDE.\n\n# transparent_background_colors\n\n#: A space separated list of upto 7 colors, with opacity. When the\n#: background color of a cell matches one of these colors, it is\n#: rendered semi-transparent using the specified opacity.\n\n#: Useful in more complex UIs like editors where you could want more\n#: than a single background color to be rendered as transparent, for\n#: instance, for a cursor highlight line background or a highlighted\n#: block. Terminal applications can set this color using The kitty\n#: color control <https://sw.kovidgoyal.net/kitty/color-stack/#color-\n#: control> escape code.\n\n#: The syntax for specifying colors is: color@opacity, where the\n#: @opacity part is optional. When unspecified, the value of\n#: background_opacity is used. For example::\n\n#:     transparent_background_colors red@0.5 #00ff00@0.3\n\n#: Note that you must also set background_opacity to something less\n#: than 1 for this setting to work properly.\n\n# dynamic_background_opacity no\n\n#: Allow changing of the background_opacity dynamically, using either\n#: keyboard shortcuts (increase_background_opacity and\n#: decrease_background_opacity) or the remote control facility.\n#: Changing this option by reloading the config is not supported.\n\n# background_image none\n\n#: Path to a background image. Must be in PNG/JPEG/WEBP/TIFF/GIF/BMP\n#: format. Note that when using auto_color_scheme\n#: <https://sw.kovidgoyal.net/kitty/kittens/themes/#auto-color-scheme>\n#: this option is overridden by the color scheme file and must be set\n#: inside it to take effect.\n\n# background_image_layout tiled\n\n#: Whether to tile, scale or clamp the background image. The value can\n#: be one of tiled, mirror-tiled, scaled, clamped, centered or\n#: cscaled. The scaled and cscaled values scale the image to the\n#: window size, with cscaled preserving the image aspect ratio. Note\n#: that when using auto_color_scheme\n#: <https://sw.kovidgoyal.net/kitty/kittens/themes/#auto-color-scheme>\n#: this option is overridden by the color scheme file and must be set\n#: inside it to take effect.\n\n# background_image_linear no\n\n#: When background image is scaled, whether linear interpolation\n#: should be used. Note that when using auto_color_scheme\n#: <https://sw.kovidgoyal.net/kitty/kittens/themes/#auto-color-scheme>\n#: this option is overridden by the color scheme file and must be set\n#: inside it to take effect.\n\n# background_tint 0.0\n\n#: How much to tint the background image by the background color. This\n#: option makes it easier to read the text. Tinting is done using the\n#: current background color for each window. This option applies only\n#: if background_image is set. Note that when using auto_color_scheme\n#: <https://sw.kovidgoyal.net/kitty/kittens/themes/#auto-color-scheme>\n#: this option is overridden by the color scheme file and must be set\n#: inside it to take effect.\n\n# background_tint_gaps 1.0\n\n#: How much to tint the background image at the window gaps by the\n#: background color, after applying background_tint. Since this is\n#: multiplicative with background_tint, it can be used to lighten the\n#: tint over the window gaps for a *separated* look. Note that when\n#: using auto_color_scheme\n#: <https://sw.kovidgoyal.net/kitty/kittens/themes/#auto-color-scheme>\n#: this option is overridden by the color scheme file and must be set\n#: inside it to take effect.\n\n# dim_opacity 0.4\n\n#: How much to dim text that has the DIM/FAINT attribute set. One\n#: means no dimming and zero means fully dimmed (i.e. invisible).\n\n# selection_foreground #000000\n# selection_background #fffacd\n\n#: The foreground and background colors for text selected with the\n#: mouse. Setting both of these to none will cause a \"reverse video\"\n#: effect for selections, where the selection will be the cell text\n#: color and the text will become the cell background color. Setting\n#: only selection_foreground to none will cause the foreground color\n#: to be used unchanged. Note that these colors can be overridden by\n#: the program running in the terminal.\n\n#: The color table {{{\n\n#: The 256 terminal colors. There are 8 basic colors, each color has a\n#: dull and bright version, for the first 16 colors. You can set the\n#: remaining 240 colors as color16 to color255.\n\n# color0 #000000\n# color8 #767676\n\n#: black\n\n# color1 #cc0403\n# color9 #f2201f\n\n#: red\n\n# color2  #19cb00\n# color10 #23fd00\n\n#: green\n\n# color3  #cecb00\n# color11 #fffd00\n\n#: yellow\n\n# color4  #0d73cc\n# color12 #1a8fff\n\n#: blue\n\n# color5  #cb1ed1\n# color13 #fd28ff\n\n#: magenta\n\n# color6  #0dcdcd\n# color14 #14ffff\n\n#: cyan\n\n# color7  #dddddd\n# color15 #ffffff\n\n#: white\n\n# mark1_foreground black\n\n#: Color for marks of type 1\n\n# mark1_background #98d3cb\n\n#: Color for marks of type 1 (light steel blue)\n\n# mark2_foreground black\n\n#: Color for marks of type 2\n\n# mark2_background #f2dcd3\n\n#: Color for marks of type 1 (beige)\n\n# mark3_foreground black\n\n#: Color for marks of type 3\n\n# mark3_background #f274bc\n\n#: Color for marks of type 3 (violet)\n\n#: }}}\n\n#: }}}\n\n#: Advanced {{{\n\n# shell .\n\n#: The shell program to execute. The default value of . means to use\n#: the value of of the SHELL environment variable or if unset,\n#: whatever shell is set as the default shell for the current user.\n#: Note that on macOS if you change this, you might need to add\n#: --login and --interactive to ensure that the shell starts in\n#: interactive mode and reads its startup rc files. Environment\n#: variables are expanded in this setting.\n\n# editor .\n\n#: The terminal based text editor (such as vim or nano) to use when\n#: editing the kitty config file or similar tasks.\n\n#: The default value of . means to use the environment variables\n#: VISUAL and EDITOR in that order. If these variables aren't set,\n#: kitty will run your shell ($SHELL -l -i -c env) to see if your\n#: shell startup rc files set VISUAL or EDITOR. If that doesn't work,\n#: kitty will cycle through various known editors (vim, emacs, etc.)\n#: and take the first one that exists on your system.\n\n# close_on_child_death no\n\n#: Close the window when the child process (usually the shell) exits.\n#: With the default value no, the terminal will remain open when the\n#: child exits as long as there are still other processes outputting\n#: to the terminal (for example disowned or backgrounded processes).\n#: When enabled with yes, the window will close as soon as the child\n#: process exits. Note that setting it to yes means that any\n#: background processes still using the terminal can fail silently\n#: because their stdout/stderr/stdin no longer work.\n\n# remote_control_password\n\n#: Allow other programs to control kitty using passwords. This option\n#: can be specified multiple times to add multiple passwords. If no\n#: passwords are present kitty will ask the user for permission if a\n#: program tries to use remote control with a password. A password can\n#: also *optionally* be associated with a set of allowed remote\n#: control actions. For example::\n\n#:     remote_control_password \"my passphrase\" get-colors set-colors focus-window focus-tab\n\n#: Only the specified actions will be allowed when using this\n#: password. Glob patterns can be used too, for example::\n\n#:     remote_control_password \"my passphrase\" set-tab-* resize-*\n\n#: To get a list of available actions, run::\n\n#:     kitten @ --help\n\n#: A set of actions to be allowed when no password is sent can be\n#: specified by using an empty password. For example::\n\n#:     remote_control_password \"\" *-colors\n\n#: Finally, the path to a python module can be specified that provides\n#: a function is_cmd_allowed that is used to check every remote\n#: control command. For example::\n\n#:     remote_control_password \"my passphrase\" my_rc_command_checker.py\n\n#: Relative paths are resolved from the kitty configuration directory.\n#: See rc_custom_auth <https://sw.kovidgoyal.net/kitty/remote-\n#: control/#rc-custom-auth> for details.\n\n# allow_remote_control no\n\n#: Allow other programs to control kitty. If you turn this on, other\n#: programs can control all aspects of kitty, including sending text\n#: to kitty windows, opening new windows, closing windows, reading the\n#: content of windows, etc. Note that this even works over SSH\n#: connections. The default setting of no prevents any form of remote\n#: control. The meaning of the various values are:\n\n#: password\n#:     Remote control requests received over both the TTY device and the socket\n#:     are confirmed based on passwords, see remote_control_password.\n\n#: socket-only\n#:     Remote control requests received over a socket are accepted\n#:     unconditionally. Requests received over the TTY are denied.\n#:     See listen_on.\n\n#: socket\n#:     Remote control requests received over a socket are accepted\n#:     unconditionally. Requests received over the TTY are confirmed based on\n#:     password.\n\n#: no\n#:     Remote control is completely disabled.\n\n#: yes\n#:     Remote control requests are always accepted.\n\n# listen_on none\n\n#: Listen to the specified socket for remote control connections. Note\n#: that this will apply to all kitty instances. It can be overridden\n#: by the kitty --listen-on command line option. For UNIX sockets,\n#: such as unix:${TEMP}/mykitty or unix:@mykitty (on Linux).\n#: Environment variables are expanded and relative paths are resolved\n#: with respect to the temporary directory. If {kitty_pid} is present,\n#: then it is replaced by the PID of the kitty process, otherwise the\n#: PID of the kitty process is appended to the value, with a hyphen.\n#: For TCP sockets such as tcp:localhost:0 a random port is always\n#: used even if a non-zero port number is specified.  See the help for\n#: kitty --listen-on for more details. Note that this will be ignored\n#: unless allow_remote_control is set to either: yes, socket or\n#: socket-only. Changing this option by reloading the config is not\n#: supported.\n\n# env\n\n#: Specify the environment variables to be set in all child processes.\n#: Using the name with an equal sign (e.g. env VAR=) will set it to\n#: the empty string. Specifying only the name (e.g. env VAR) will\n#: remove the variable from the child process' environment. Note that\n#: environment variables are expanded recursively, for example::\n\n#:     env VAR1=a\n#:     env VAR2=${HOME}/${VAR1}/b\n\n#: The value of VAR2 will be <path to home directory>/a/b.\n\n#: Use the special value read_from_shell to have kitty read the\n#: specified variables from your login shell shell configuration.\n#: Useful if your shell startup files setup a bunch of environment\n#: variables that you want available to kitty and in kitty session\n#: files. Each variable name is treated as a glob pattern to match.\n#: For example: env read_from_shell=PATH LANG LC_* XDG_* EDITOR\n#: VISUAL. Note that these variables are only read after the\n#: configuration is fully processed, thus they are not available for\n#: recursive expansion and they will override any variables set by\n#: other env directives.\n\n# filter_notification\n\n#: Specify rules to filter out notifications sent by applications\n#: running in kitty. Can be specified multiple times to create\n#: multiple filter rules. A rule specification is of the form\n#: field:regexp. A filter rule can match on any of the fields: title,\n#: body, app, type. The special value of all filters out all\n#: notifications. Rules can be combined using Boolean operators. Some\n#: examples::\n\n#:     filter_notification title:hello or body:\"abc.*def\"\n#:     # filter out notification from vim except for ones about updates, (?i)\n#:     # makes matching case insensitive.\n#:     filter_notification app:\"[ng]?vim\" and not body:\"(?i)update\"\n#:     # filter out all notifications\n#:     filter_notification all\n\n#: The field app is the name of the application sending the\n#: notification and type is the type of the notification. Not all\n#: applications will send these fields, so you can also match on the\n#: title and body of the notification text. More sophisticated\n#: programmatic filtering and custom actions on notifications can be\n#: done by creating a notifications.py file in the kitty config\n#: directory (~/.config/kitty). An annotated sample is available\n#: <https://github.com/kovidgoyal/kitty/blob/master/docs/notifications.py>.\n\n# watcher\n\n#: Path to python file which will be loaded for watchers\n#: <https://sw.kovidgoyal.net/kitty/launch/#watchers>. Can be\n#: specified more than once to load multiple watchers. The watchers\n#: will be added to every kitty window. Relative paths are resolved\n#: relative to the kitty config directory. Note that reloading the\n#: config will only affect windows created after the reload.\n\n# exe_search_path\n\n#: Control where kitty finds the programs to run. The default search\n#: order is: First search the system wide PATH, then ~/.local/bin and\n#: ~/bin. If still not found, the PATH defined in the login shell\n#: after sourcing all its startup files is tried. Finally, if present,\n#: the PATH specified by the env option is tried.\n\n#: This option allows you to prepend, append, or remove paths from\n#: this search order. It can be specified multiple times for multiple\n#: paths. A simple path will be prepended to the search order. A path\n#: that starts with the + sign will be append to the search order,\n#: after ~/bin above. A path that starts with the - sign will be\n#: removed from the entire search order. For example::\n\n#:     exe_search_path /some/prepended/path\n#:     exe_search_path +/some/appended/path\n#:     exe_search_path -/some/excluded/path\n\n# update_check_interval 24\n\n#: The interval to periodically check if an update to kitty is\n#: available (in hours). If an update is found, a system notification\n#: is displayed informing you of the available update. The default is\n#: to check every 24 hours, set to zero to disable. Update checking is\n#: only done by the official binary builds. Distro packages or source\n#: builds do not do update checking. Changing this option by reloading\n#: the config is not supported.\n\n# startup_session none\n\n#: Path to a session file to use for all kitty instances. Can be\n#: overridden by using the kitty --session =none command line option\n#: for individual instances. See sessions\n#: <https://sw.kovidgoyal.net/kitty/sessions/> in the kitty\n#: documentation for details. Note that relative paths are interpreted\n#: with respect to the kitty config directory. Environment variables\n#: in the path are expanded. Changing this option by reloading the\n#: config is not supported. Note that if kitty is invoked with command\n#: line arguments specifying a command to run, this option is ignored.\n\n# clipboard_control write-clipboard write-primary read-clipboard-ask read-primary-ask\n\n#: Allow programs running in kitty to read and write from the\n#: clipboard. You can control exactly which actions are allowed. The\n#: possible actions are: write-clipboard, read-clipboard, write-\n#: primary, read-primary, read-clipboard-ask, read-primary-ask. The\n#: default is to allow writing to the clipboard and primary selection\n#: and to ask for permission when a program tries to read from the\n#: clipboard. Note that disabling the read confirmation is a security\n#: risk as it means that any program, even the ones running on a\n#: remote server via SSH can read your clipboard. See also\n#: clipboard_max_size.\n\n# clipboard_max_size 512\n\n#: The maximum size (in MB) of data from programs running in kitty\n#: that will be stored for writing to the system clipboard. A value of\n#: zero means no size limit is applied. See also clipboard_control.\n\n# file_transfer_confirmation_bypass\n\n#: The password that can be supplied to the file transfer kitten\n#: <https://sw.kovidgoyal.net/kitty/kittens/transfer/> to skip the\n#: transfer confirmation prompt. This should only be used when\n#: initiating transfers from trusted computers, over trusted networks\n#: or encrypted transports, as it allows any programs running on the\n#: remote machine to read/write to the local filesystem, without\n#: permission.\n\n# allow_hyperlinks yes\n\n#: Process hyperlink escape sequences (OSC 8). If disabled OSC 8\n#: escape sequences are ignored. Otherwise they become clickable\n#: links, that you can click with the mouse or by using the hints\n#: kitten <https://sw.kovidgoyal.net/kitty/kittens/hints/>. The\n#: special value of ask means that kitty will ask before opening the\n#: link when clicked.\n\n# shell_integration enabled\n\n#: Enable shell integration on supported shells. This enables features\n#: such as jumping to previous prompts, browsing the output of the\n#: previous command in a pager, etc. on supported shells. Set to\n#: disabled to turn off shell integration, completely. It is also\n#: possible to disable individual features, set to a space separated\n#: list of these values: no-rc, no-cursor, no-title, no-cwd, no-\n#: prompt-mark, no-complete, no-sudo. See Shell integration\n#: <https://sw.kovidgoyal.net/kitty/shell-integration/> for details.\n\n# allow_cloning ask\n\n#: Control whether programs running in the terminal can request new\n#: windows to be created. The canonical example is clone-in-kitty\n#: <https://sw.kovidgoyal.net/kitty/shell-integration/#clone-shell>.\n#: By default, kitty will ask for permission for each clone request.\n#: Allowing cloning unconditionally gives programs running in the\n#: terminal (including over SSH) permission to execute arbitrary code,\n#: as the user who is running the terminal, on the computer that the\n#: terminal is running on.\n\n# clone_source_strategies venv,conda,env_var,path\n\n#: Control what shell code is sourced when running clone-in-kitty in\n#: the newly cloned window. The supported strategies are:\n\n#: venv\n#:     Source the file $VIRTUAL_ENV/bin/activate. This is used by the\n#:     Python stdlib venv module and allows cloning venvs automatically.\n#: conda\n#:     Run conda activate $CONDA_DEFAULT_ENV. This supports the virtual\n#:     environments created by conda.\n#: env_var\n#:     Execute the contents of the environment variable\n#:     KITTY_CLONE_SOURCE_CODE with eval.\n#: path\n#:     Source the file pointed to by the environment variable\n#:     KITTY_CLONE_SOURCE_PATH.\n\n#: This option must be a comma separated list of the above values.\n#: Only the first valid match, in the order specified, is sourced.\n\n# notify_on_cmd_finish never\n\n#: Show a desktop notification when a long-running command finishes\n#: (needs shell_integration). The possible values are:\n\n#: never\n#:     Never send a notification.\n\n#: unfocused\n#:     Only send a notification when the window does not have keyboard focus.\n\n#: invisible\n#:     Only send a notification when the window both is unfocused and not visible\n#:     to the user, for example, because it is in an inactive tab or its OS window\n#:     is not currently visible (on platforms that support OS window visibility querying\n#:     this considers an OS Window visible iff it is active).\n\n#: always\n#:     Always send a notification, regardless of window state.\n\n#: There are two optional arguments:\n\n#: First, the minimum duration for what is considered a long running\n#: command. The default is 5 seconds. Specify a second argument to set\n#: the duration. For example: invisible 15. Do not set the value too\n#: small, otherwise a command that launches a new OS Window and exits\n#: will spam a notification.\n\n#: Second, the action to perform. The default is notify. The possible\n#: values are:\n\n#: notify\n#:     Send a desktop notification. The subsequent arguments are optional and specify when\n#:     the notification is automatically cleared. The set of possible events when the notification is\n#:     cleared are: focus and next. focus means that when the notification\n#:     policy is unfocused or invisible the notification is automatically cleared\n#:     when the window regains focus. The value of next means that the previous notification\n#:     is cleared when the next notification is shown. The default when no arguments are specified\n#:     is: focus next.\n\n#: bell\n#:     Ring the terminal bell.\n\n#: notify-bell\n#:     Send a desktop notification and ring the terminal bell.\n#:     The arguments are the same as for `notify`.\n\n#: command\n#:     Run a custom command. All subsequent arguments are the cmdline to run.\n\n#: Some more examples::\n\n#:     # Send a notification when a command takes more than 5 seconds in an unfocused window\n#:     notify_on_cmd_finish unfocused\n#:     # Send a notification when a command takes more than 10 seconds in a invisible window\n#:     notify_on_cmd_finish invisible 10.0\n#:     # Ring a bell when a command takes more than 10 seconds in a invisible window\n#:     notify_on_cmd_finish invisible 10.0 bell\n#:     # Run 'notify-send' when a command takes more than 10 seconds in a invisible window\n#:     # Here %c is replaced by the current command line and %s by the job exit code\n#:     notify_on_cmd_finish invisible 10.0 command notify-send \"job finished with status: %s\" %c\n#:     # Do not clear previous notification when next command finishes or window regains focus\n#:     notify_on_cmd_finish invisible 5.0 notify\n\n# term xterm-kitty\n\n#: The value of the TERM environment variable to set. Changing this\n#: can break many terminal programs, only change it if you know what\n#: you are doing, not because you read some advice on \"Stack Overflow\"\n#: to change it. The TERM variable is used by various programs to get\n#: information about the capabilities and behavior of the terminal. If\n#: you change it, depending on what programs you run, and how\n#: different the terminal you are changing it to is, various things\n#: from key-presses, to colors, to various advanced features may not\n#: work. Changing this option by reloading the config will only affect\n#: newly created windows.\n\n# terminfo_type path\n\n#: The value of the TERMINFO environment variable to set. This\n#: variable is used by programs running in the terminal to search for\n#: terminfo databases. The default value of path causes kitty to set\n#: it to a filesystem location containing the kitty terminfo database.\n#: A value of direct means put the entire database into the env var\n#: directly. This can be useful when connecting to containers, for\n#: example. But, note that not all software supports this. A value of\n#: none means do not touch the variable.\n\n# forward_stdio no\n\n#: Forward STDOUT and STDERR of the kitty process to child processes.\n#: This is useful for debugging as it allows child processes to print\n#: to kitty's STDOUT directly. For example, echo hello world\n#: >&$KITTY_STDIO_FORWARDED in a shell will print to the parent\n#: kitty's STDOUT. Sets the KITTY_STDIO_FORWARDED=fdnum environment\n#: variable so child processes know about the forwarding. Note that on\n#: macOS this prevents the shell from being run via the login utility\n#: so getlogin() will not work in programs run in this session.\n\n# menu_map\n\n#: Specify entries for various menus in kitty. Currently only the\n#: global menubar on macOS is supported. For example::\n\n#:    menu_map global \"Actions::Launch something special\" launch --hold --type=os-window sh -c \"echo hello world\"\n\n#: This will create a menu entry named \"Launch something special\" in\n#: an \"Actions\" menu in the macOS global menubar. Sub-menus can be\n#: created by adding more levels separated by the :: characters.\n\n#: }}}\n\n#: OS specific tweaks {{{\n\n# wayland_titlebar_color system\n\n#: The color of the kitty window's titlebar on Wayland systems with\n#: client side window decorations such as GNOME. A value of system\n#: means to use the default system colors, a value of background means\n#: to use the background color of the currently active kitty window\n#: and finally you can use an arbitrary color, such as #12af59 or red.\n\n# macos_titlebar_color system\n\n#: The color of the kitty window's titlebar on macOS. A value of\n#: system means to use the default system color, light or dark can\n#: also be used to set it explicitly. A value of background means to\n#: use the background color of the currently active window and finally\n#: you can use an arbitrary color, such as #12af59 or red.\n\n# macos_option_as_alt no\n\n#: Use the Option key as an Alt key on macOS. With this set to no,\n#: kitty will use the macOS native Option+Key to enter Unicode\n#: character behavior. This will break any Alt+Key keyboard shortcuts\n#: in your terminal programs, but you can use the macOS Unicode input\n#: technique. You can use the values: left, right or both to use only\n#: the left, right or both Option keys as Alt, instead. Note that\n#: kitty itself always treats Option the same as Alt. This means you\n#: cannot use this option to configure different kitty shortcuts for\n#: Option+Key vs. Alt+Key. Also, any kitty shortcuts using\n#: Option/Alt+Key will take priority, so that any such key presses\n#: will not be passed to terminal programs running inside kitty.\n#: Changing this option by reloading the config is not supported.\n\n# macos_hide_from_tasks no\n\n#: Hide the kitty window from running tasks on macOS (⌘+Tab and the\n#: Dock). Changing this option by reloading the config is not\n#: supported.\n\n# macos_quit_when_last_window_closed no\n\n#: Have kitty quit when all the top-level windows are closed on macOS.\n#: By default, kitty will stay running, even with no open windows, as\n#: is the expected behavior on macOS.\n\n# macos_window_resizable yes\n\n#: Disable this if you want kitty top-level OS windows to not be\n#: resizable on macOS.\n\n# macos_thicken_font 0\n\n#: Draw an extra border around the font with the given width, to\n#: increase legibility at small font sizes on macOS. For example, a\n#: value of 0.75 will result in rendering that looks similar to sub-\n#: pixel antialiasing at common font sizes. Note that in modern kitty,\n#: this option is obsolete (although still supported). Consider using\n#: text_composition_strategy instead.\n\n# macos_traditional_fullscreen no\n\n#: Use the macOS traditional full-screen transition, that is faster,\n#: but less pretty.\n\n# macos_show_window_title_in all\n\n#: Control where the window title is displayed on macOS. A value of\n#: window will show the title of the currently active window at the\n#: top of the macOS window. A value of menubar will show the title of\n#: the currently active window in the macOS global menu bar, making\n#: use of otherwise wasted space. A value of all will show the title\n#: in both places, and none hides the title. See\n#: macos_menubar_title_max_length for how to control the length of the\n#: title in the menu bar.\n\n# macos_menubar_title_max_length 0\n\n#: The maximum number of characters from the window title to show in\n#: the macOS global menu bar. Values less than one means that there is\n#: no maximum limit.\n\n# macos_custom_beam_cursor no\n\n#: Use a custom mouse cursor for macOS that is easier to see on both\n#: light and dark backgrounds. Nowadays, the default macOS cursor\n#: already comes with a white border. WARNING: this might make your\n#: mouse cursor invisible on dual GPU machines. Changing this option\n#: by reloading the config is not supported.\n\n# macos_colorspace srgb\n\n#: The colorspace in which to interpret terminal colors. The default\n#: of srgb will cause colors to match those seen in web browsers. The\n#: value of default will use whatever the native colorspace of the\n#: display is. The value of displayp3 will use Apple's special\n#: snowflake display P3 color space, which will result in over\n#: saturated (brighter) colors with some color shift. Reloading\n#: configuration will change this value only for newly created OS\n#: windows.\n\n# linux_display_server auto\n\n#: Choose between Wayland and X11 backends. By default, an appropriate\n#: backend based on the system state is chosen automatically. Set it\n#: to x11 or wayland to force the choice. Changing this option by\n#: reloading the config is not supported.\n\n# wayland_enable_ime yes\n\n#: Enable Input Method Extension on Wayland. This is typically used\n#: for inputting text in East Asian languages. However, its\n#: implementation in Wayland is often buggy and introduces latency\n#: into the input loop, so disable this if you know you dont need it.\n#: Changing this option by reloading the config is not supported, it\n#: will not have any effect.\n\n#: }}}\n\n#: Keyboard shortcuts {{{\n\n#: Keys are identified simply by their lowercase Unicode characters.\n#: For example: a for the A key, [ for the left square bracket key,\n#: etc. For functional keys, such as Enter or Escape, the names are\n#: present at Functional key definitions\n#: <https://sw.kovidgoyal.net/kitty/keyboard-protocol/#functional>.\n#: For modifier keys, the names are ctrl (control, ⌃), shift (⇧), alt\n#: (opt, option, ⌥), super (cmd, command, ⌘).\n\n#: Simple shortcut mapping is done with the map directive. For full\n#: details on advanced mapping including modal and per application\n#: maps, see mapping <https://sw.kovidgoyal.net/kitty/mapping/>. Some\n#: quick examples to illustrate common tasks::\n\n#:     # unmap a keyboard shortcut, passing it to the program running in kitty\n#:     map kitty_mod+space\n#:     # completely ignore a keyboard event\n#:     map ctrl+alt+f1 discard_event\n#:     # combine multiple actions\n#:     map kitty_mod+e combine : new_window : next_layout\n#:     # multi-key shortcuts\n#:     map ctrl+x>ctrl+y>z action\n\n#: The full list of actions that can be mapped to key presses is\n#: available here <https://sw.kovidgoyal.net/kitty/actions/>.\n\n# kitty_mod ctrl+shift\n\n#: Special modifier key alias for default shortcuts. You can change\n#: the value of this option to alter all default shortcuts that use\n#: kitty_mod.\n\n# clear_all_shortcuts no\n\n#: Remove all shortcut definitions up to this point. Useful, for\n#: instance, to remove the default shortcuts.\n\n# action_alias\n\n#: E.g. action_alias launch_tab launch --type=tab --cwd=current\n\n#: Define action aliases to avoid repeating the same options in\n#: multiple mappings. Aliases can be defined for any action and will\n#: be expanded recursively. For example, the above alias allows you to\n#: create mappings to launch a new tab in the current working\n#: directory without duplication::\n\n#:     map f1 launch_tab vim\n#:     map f2 launch_tab emacs\n\n#: Similarly, to alias kitten invocation::\n\n#:     action_alias hints kitten hints --hints-offset=0\n\n# kitten_alias\n\n#: E.g. kitten_alias hints hints --hints-offset=0\n\n#: Like action_alias above, but specifically for kittens. Generally,\n#: prefer to use action_alias. This option is a legacy version,\n#: present for backwards compatibility. It causes all invocations of\n#: the aliased kitten to be substituted. So the example above will\n#: cause all invocations of the hints kitten to have the --hints-\n#: offset=0 option applied.\n\n#: Clipboard {{{\n\n#: Copy to clipboard\n\n# map kitty_mod+c copy_to_clipboard\n\n#::  There is also a copy_or_interrupt action that can be optionally\n#::  mapped to Ctrl+C. It will copy only if there is a selection and\n#::  send an interrupt otherwise. Similarly,\n#::  copy_and_clear_or_interrupt will copy and clear the selection or\n#::  send an interrupt if there is no selection. The copy_or_noop\n#::  action will copy if there is a selection and pass the key through\n#::  to the application running in the terminal if there is no\n#::  selection.\n\n#: Copy to clipboard or pass through\n\n# map cmd+c copy_or_noop\n\n#: Paste from clipboard\n\n# map kitty_mod+v paste_from_clipboard\n# map cmd+v       paste_from_clipboard\n\n#: Paste from selection\n\n# map kitty_mod+s  paste_from_selection\n# map shift+insert paste_from_selection\n\n#: Pass selection to program\n\n# map kitty_mod+o pass_selection_to_program\n\n#::  You can also pass the contents of the current selection to any\n#::  program with pass_selection_to_program. By default, the system's\n#::  open program is used, but you can specify your own, the selection\n#::  will be passed as a command line argument to the program. For\n#::  example::\n\n#::      map kitty_mod+o pass_selection_to_program firefox\n\n#::  You can pass the current selection to a terminal program running\n#::  in a new kitty window, by using the @selection placeholder::\n\n#::      map kitty_mod+y new_window less @selection\n\n#: }}}\n\n#: Scrolling {{{\n\n#: Scroll line up\n\n# map kitty_mod+up    scroll_line_up\n# map kitty_mod+k     scroll_line_up\n# map opt+cmd+page_up scroll_line_up\n# map cmd+up          scroll_line_up\n\n#: Scroll line down\n\n# map kitty_mod+down    scroll_line_down\n# map kitty_mod+j       scroll_line_down\n# map opt+cmd+page_down scroll_line_down\n# map cmd+down          scroll_line_down\n\n#: Scroll page up\n\n# map kitty_mod+page_up scroll_page_up\n# map cmd+page_up       scroll_page_up\n\n#: Scroll page down\n\n# map kitty_mod+page_down scroll_page_down\n# map cmd+page_down       scroll_page_down\n\n#: Scroll to top\n\n# map kitty_mod+home scroll_home\n# map cmd+home       scroll_home\n\n#: Scroll to bottom\n\n# map kitty_mod+end scroll_end\n# map cmd+end       scroll_end\n\n#: Scroll to previous shell prompt\n\n# map kitty_mod+z scroll_to_prompt -1\n\n#::  Use a parameter of 0 for scroll_to_prompt to scroll to the last\n#::  jumped to or the last clicked position. Requires shell\n#::  integration <https://sw.kovidgoyal.net/kitty/shell-integration/>\n#::  to work.\n\n#: Scroll to next shell prompt\n\n# map kitty_mod+x scroll_to_prompt 1\n\n#: Browse scrollback buffer in pager\n\n# map kitty_mod+h show_scrollback\n\n#::  You can pipe the contents of the current screen and history\n#::  buffer as STDIN to an arbitrary program using launch --stdin-\n#::  source. For example, the following opens the scrollback buffer in\n#::  less in an overlay window::\n\n#::      map f1 launch --stdin-source=@screen_scrollback --stdin-add-formatting --type=overlay less +G -R\n\n#::  For more details on piping screen and buffer contents to external\n#::  programs, see launch <https://sw.kovidgoyal.net/kitty/launch/>.\n\n#: Browse output of the last shell command in pager\n\n# map kitty_mod+g show_last_command_output\n\n#::  You can also define additional shortcuts to get the command\n#::  output. For example, to get the first command output on screen::\n\n#::      map f1 show_first_command_output_on_screen\n\n#::  To get the command output that was last accessed by a keyboard\n#::  action or mouse action::\n\n#::      map f1 show_last_visited_command_output\n\n#::  You can pipe the output of the last command run in the shell\n#::  using the launch action. For example, the following opens the\n#::  output in less in an overlay window::\n\n#::      map f1 launch --stdin-source=@last_cmd_output --stdin-add-formatting --type=overlay less +G -R\n\n#::  To get the output of the first command on the screen, use\n#::  @first_cmd_output_on_screen. To get the output of the last jumped\n#::  to command, use @last_visited_cmd_output.\n\n#::  Requires shell integration\n#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.\n\n#: }}}\n\n#: Window management {{{\n\n#: New window\n\n# map kitty_mod+enter new_window\n# map cmd+enter       new_window\n\n#::  You can open a new kitty window running an arbitrary program, for\n#::  example::\n\n#::      map kitty_mod+y launch mutt\n\n#::  You can open a new window with the current working directory set\n#::  to the working directory of the current window using::\n\n#::      map ctrl+alt+enter launch --cwd=current\n\n#::  You can open a new window that is allowed to control kitty via\n#::  the kitty remote control facility with launch --allow-remote-\n#::  control. Any programs running in that window will be allowed to\n#::  control kitty. For example::\n\n#::      map ctrl+enter launch --allow-remote-control some_program\n\n#::  You can open a new window next to the currently active window or\n#::  as the first window, with::\n\n#::      map ctrl+n launch --location=neighbor\n#::      map ctrl+f launch --location=first\n\n#::  For more details, see launch\n#::  <https://sw.kovidgoyal.net/kitty/launch/>.\n\n#: New OS window\n\n# map kitty_mod+n new_os_window\n# map cmd+n       new_os_window\n\n#::  Works like new_window above, except that it opens a top-level OS\n#::  window. In particular you can use new_os_window_with_cwd to open\n#::  a window with the current working directory.\n\n#: Close window\n\n# map kitty_mod+w close_window\n# map shift+cmd+d close_window\n\n#: Next window\n\n# map kitty_mod+] next_window\n\n#: Previous window\n\n# map kitty_mod+[ previous_window\n\n#: Move window forward\n\n# map kitty_mod+f move_window_forward\n\n#: Move window backward\n\n# map kitty_mod+b move_window_backward\n\n#: Move window to top\n\n# map kitty_mod+` move_window_to_top\n\n#: Start resizing window\n\n# map kitty_mod+r start_resizing_window\n# map cmd+r       start_resizing_window\n\n#: First window\n\n# map kitty_mod+1 first_window\n# map cmd+1       first_window\n\n#: Second window\n\n# map kitty_mod+2 second_window\n# map cmd+2       second_window\n\n#: Third window\n\n# map kitty_mod+3 third_window\n# map cmd+3       third_window\n\n#: Fourth window\n\n# map kitty_mod+4 fourth_window\n# map cmd+4       fourth_window\n\n#: Fifth window\n\n# map kitty_mod+5 fifth_window\n# map cmd+5       fifth_window\n\n#: Sixth window\n\n# map kitty_mod+6 sixth_window\n# map cmd+6       sixth_window\n\n#: Seventh window\n\n# map kitty_mod+7 seventh_window\n# map cmd+7       seventh_window\n\n#: Eighth window\n\n# map kitty_mod+8 eighth_window\n# map cmd+8       eighth_window\n\n#: Ninth window\n\n# map kitty_mod+9 ninth_window\n# map cmd+9       ninth_window\n\n#: Tenth window\n\n# map kitty_mod+0 tenth_window\n\n#: Visually select and focus window\n\n# map kitty_mod+f7 focus_visible_window\n\n#::  Display overlay numbers and alphabets on the window, and switch\n#::  the focus to the window when you press the key. When there are\n#::  only two windows, the focus will be switched directly without\n#::  displaying the overlay. You can change the overlay characters and\n#::  their order with option visual_window_select_characters.\n\n#: Visually swap window with another\n\n# map kitty_mod+f8 swap_with_window\n\n#::  Works like focus_visible_window above, but swaps the window.\n\n#: }}}\n\n#: Tab management {{{\n\n#: Next tab\n\n# map kitty_mod+right next_tab\n# map shift+cmd+]     next_tab\n# map ctrl+tab        next_tab\n\n#: Previous tab\n\n# map kitty_mod+left previous_tab\n# map shift+cmd+[    previous_tab\n# map ctrl+shift+tab previous_tab\n\n#: New tab\n\n# map kitty_mod+t new_tab\n# map cmd+t       new_tab\n\n#: Close tab\n\n# map kitty_mod+q close_tab\n# map cmd+w       close_tab\n\n#: Close OS window\n\n# map shift+cmd+w close_os_window\n\n#: Move tab forward\n\n# map kitty_mod+. move_tab_forward\n\n#: Move tab backward\n\n# map kitty_mod+, move_tab_backward\n\n#: Set tab title\n\n# map kitty_mod+alt+t set_tab_title\n# map shift+cmd+i     set_tab_title\n\n\n#: You can also create shortcuts to go to specific tabs, with 1 being\n#: the first tab, 2 the second tab and -1 being the previously active\n#: tab, -2 being the tab active before the previously active tab and\n#: so on. Any number larger than the number of tabs goes to the last\n#: tab and any number less than the number of previously used tabs in\n#: the history goes to the oldest previously used tab in the history::\n\n#:     map ctrl+alt+1 goto_tab 1\n#:     map ctrl+alt+2 goto_tab 2\n\n#: Just as with new_window above, you can also pass the name of\n#: arbitrary commands to run when using new_tab and new_tab_with_cwd.\n#: Finally, if you want the new tab to open next to the current tab\n#: rather than at the end of the tabs list, use::\n\n#:     map ctrl+t new_tab !neighbor [optional cmd to run]\n#: }}}\n\n#: Layout management {{{\n\n#: Next layout\n\n# map kitty_mod+l next_layout\n\n\n#: You can also create shortcuts to switch to specific layouts::\n\n#:     map ctrl+alt+t goto_layout tall\n#:     map ctrl+alt+s goto_layout stack\n\n#: Similarly, to switch back to the previous layout::\n\n#:     map ctrl+alt+p last_used_layout\n\n#: There is also a toggle_layout action that switches to the named\n#: layout or back to the previous layout if in the named layout.\n#: Useful to temporarily \"zoom\" the active window by switching to the\n#: stack layout::\n\n#:     map ctrl+alt+z toggle_layout stack\n#: }}}\n\n#: Font sizes {{{\n\n#: You can change the font size for all top-level kitty OS windows at\n#: a time or only the current one.\n\n#: Increase font size\n\n# map kitty_mod+equal  change_font_size all +2.0\n# map kitty_mod+plus   change_font_size all +2.0\n# map kitty_mod+kp_add change_font_size all +2.0\n# map cmd+plus         change_font_size all +2.0\n# map cmd+equal        change_font_size all +2.0\n# map shift+cmd+equal  change_font_size all +2.0\n\n#: Decrease font size\n\n# map kitty_mod+minus       change_font_size all -2.0\n# map kitty_mod+kp_subtract change_font_size all -2.0\n# map cmd+minus             change_font_size all -2.0\n# map shift+cmd+minus       change_font_size all -2.0\n\n#: Reset font size\n\n# map kitty_mod+backspace change_font_size all 0\n# map cmd+0               change_font_size all 0\n\n\n#: To setup shortcuts for specific font sizes::\n\n#:     map kitty_mod+f6 change_font_size all 10.0\n\n#: To setup shortcuts to change only the current OS window's font\n#: size::\n\n#:     map kitty_mod+f6 change_font_size current 10.0\n\n#: To setup shortcuts to multiply/divide the font size::\n\n#:     map kitty_mod+f6 change_font_size all *2.0\n#:     map kitty_mod+f6 change_font_size all /2.0\n#: }}}\n\n#: Select and act on visible text {{{\n\n#: Use the hints kitten to select text and either pass it to an\n#: external program or insert it into the terminal or copy it to the\n#: clipboard.\n\n#: Open URL\n\n# map kitty_mod+e open_url_with_hints\n\n#::  Open a currently visible URL using the keyboard. The program used\n#::  to open the URL is specified in open_url_with.\n\n#: Insert selected path\n\n# map kitty_mod+p>f kitten hints --type path --program -\n\n#::  Select a path/filename and insert it into the terminal. Useful,\n#::  for instance to run git commands on a filename output from a\n#::  previous git command.\n\n#: Open selected path\n\n# map kitty_mod+p>shift+f kitten hints --type path\n\n#::  Select a path/filename and open it with the default open program.\n\n#: Insert selected line\n\n# map kitty_mod+p>l kitten hints --type line --program -\n\n#::  Select a line of text and insert it into the terminal. Useful for\n#::  the output of things like: `ls -1`.\n\n#: Insert selected word\n\n# map kitty_mod+p>w kitten hints --type word --program -\n\n#::  Select words and insert into terminal.\n\n#: Insert selected hash\n\n# map kitty_mod+p>h kitten hints --type hash --program -\n\n#::  Select something that looks like a hash and insert it into the\n#::  terminal. Useful with git, which uses SHA1 hashes to identify\n#::  commits.\n\n#: Open the selected file at the selected line\n\n# map kitty_mod+p>n kitten hints --type linenum\n\n#::  Select something that looks like filename:linenum and open it in\n#::  your default editor at the specified line number.\n\n#: Open the selected hyperlink\n\n# map kitty_mod+p>y kitten hints --type hyperlink\n\n#::  Select a hyperlink (i.e. a URL that has been marked as such by\n#::  the terminal program, for example, by `ls --hyperlink=auto`).\n\n\n#: The hints kitten has many more modes of operation that you can map\n#: to different shortcuts. For a full description see hints kitten\n#: <https://sw.kovidgoyal.net/kitty/kittens/hints/>.\n#: }}}\n\n#: Miscellaneous {{{\n\n#: Show documentation\n\n# map kitty_mod+f1 show_kitty_doc overview\n\n#: Toggle fullscreen\n\n# map kitty_mod+f11 toggle_fullscreen\n# map ctrl+cmd+f    toggle_fullscreen\n\n#: Toggle maximized\n\n# map kitty_mod+f10 toggle_maximized\n\n#: Toggle macOS secure keyboard entry\n\n# map opt+cmd+s toggle_macos_secure_keyboard_entry\n\n#: Unicode input\n\n# map kitty_mod+u    kitten unicode_input\n# map ctrl+cmd+space kitten unicode_input\n\n#: Edit config file\n\n# map kitty_mod+f2 edit_config_file\n# map cmd+,        edit_config_file\n\n#: Open the kitty command shell\n\n# map kitty_mod+escape kitty_shell window\n\n#::  Open the kitty shell in a new window / tab / overlay / os_window\n#::  to control kitty using commands.\n\n#: Increase background opacity\n\n# map kitty_mod+a>m set_background_opacity +0.1\n\n#: Decrease background opacity\n\n# map kitty_mod+a>l set_background_opacity -0.1\n\n#: Make background fully opaque\n\n# map kitty_mod+a>1 set_background_opacity 1\n\n#: Reset background opacity\n\n# map kitty_mod+a>d set_background_opacity default\n\n#: Reset the terminal\n\n# map kitty_mod+delete clear_terminal reset active\n# map opt+cmd+r        clear_terminal reset active\n\n#::  You can create shortcuts to clear/reset the terminal. For\n#::  example::\n\n#::      # Reset the terminal\n#::      map f1 clear_terminal reset active\n#::      # Clear the terminal screen by erasing all contents\n#::      map f1 clear_terminal clear active\n#::      # Clear the terminal scrollback by erasing it\n#::      map f1 clear_terminal scrollback active\n#::      # Scroll the contents of the screen into the scrollback\n#::      map f1 clear_terminal scroll active\n#::      # Clear everything on screen up to the line with the cursor or the start of the current prompt (needs shell integration)\n#::      map f1 clear_terminal to_cursor active\n#::      # Same as above except cleared lines are moved into scrollback\n#::      map f1 clear_terminal to_cursor_scroll active\n#::      # Erase the last command and its output (needs shell integration to work)\n#::      map f1 clear_terminal last_command active\n\n#::  If you want to operate on all kitty windows instead of just the\n#::  current one, use all instead of active.\n\n#::  Some useful functions that can be defined in the shell rc files\n#::  to perform various kinds of clearing of the current window:\n\n#::  .. code-block:: sh\n\n#::      clear-only-screen() {\n#::          printf \"\\e[H\\e[2J\"\n#::      }\n\n#::      clear-screen-and-scrollback() {\n#::          printf \"\\e[H\\e[3J\"\n#::      }\n\n#::      clear-screen-saving-contents-in-scrollback() {\n#::          printf \"\\e[H\\e[22J\"\n#::      }\n\n#::  For instance, using these escape codes, it is possible to remap\n#::  Ctrl+L to both scroll the current screen contents into the\n#::  scrollback buffer and clear the screen, instead of just clearing\n#::  the screen. For ZSH, in ~/.zshrc, add:\n\n#::  .. code-block:: zsh\n\n#::      ctrl_l() {\n#::          builtin print -rn -- $'\\r\\e[0J\\e[H\\e[22J' >\"$TTY\"\n#::          builtin zle .reset-prompt\n#::          builtin zle -R\n#::      }\n#::      zle -N ctrl_l\n#::      bindkey '^l' ctrl_l\n\n#::  Alternatively, you can just add map ctrl+l clear_terminal\n#::  to_cursor_scroll active to kitty.conf which works with no changes\n#::  to the shell rc files, but only clears up to the prompt, it does\n#::  not clear any text at the prompt itself.\n\n#: Clear to start\n\n# map cmd+k clear_terminal to_cursor active\n\n#: Clear scrollback\n\n# map option+cmd+k clear_terminal scrollback active\n\n#: Clear the last command\n\n# map cmd+l clear_terminal last_command active\n\n#: Clear screen\n\n# map cmd+ctrl+l clear_terminal to_cursor_scroll active\n\n#: Reload kitty.conf\n\n# map kitty_mod+f5 load_config_file\n# map ctrl+cmd+,   load_config_file\n\n#::  Reload kitty.conf, applying any changes since the last time it\n#::  was loaded. Note that a handful of options cannot be dynamically\n#::  changed and require a full restart of kitty. Particularly, when\n#::  changing shortcuts for actions located on the macOS global menu\n#::  bar, a full restart is needed. You can also map a keybinding to\n#::  load a different config file, for example::\n\n#::      map f5 load_config /path/to/alternative/kitty.conf\n\n#::  Note that all options from the original kitty.conf are discarded,\n#::  in other words the new configuration *replace* the old ones.\n\n#: Debug kitty configuration\n\n# map kitty_mod+f6 debug_config\n# map opt+cmd+,    debug_config\n\n#::  Show details about exactly what configuration kitty is running\n#::  with and its host environment. Useful for debugging issues.\n\n#: Send arbitrary text on key presses\n\n#::  E.g. map ctrl+shift+alt+h send_text all Hello World\n\n#::  You can tell kitty to send arbitrary (UTF-8) encoded text to the\n#::  client program when pressing specified shortcut keys. For\n#::  example::\n\n#::      map ctrl+alt+a send_text all Special text\n\n#::  This will send \"Special text\" when you press the Ctrl+Alt+A key\n#::  combination. The text to be sent decodes ANSI C escapes\n#::  <https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-\n#::  Quoting.html> so you can use escapes like \\e to send control\n#::  codes or \\u21fb to send Unicode characters (or you can just input\n#::  the Unicode characters directly as UTF-8 text). You can use\n#::  `kitten show-key` to get the key escape codes you want to\n#::  emulate.\n\n#::  The first argument to send_text is the keyboard modes in which to\n#::  activate the shortcut. The possible values are normal,\n#::  application, kitty or a comma separated combination of them. The\n#::  modes normal and application refer to the DECCKM cursor key mode\n#::  for terminals, and kitty refers to the kitty extended keyboard\n#::  protocol. The special value all means all of them.\n\n#::  Some more examples::\n\n#::      # Output a word and move the cursor to the start of the line (like typing and pressing Home)\n#::      map ctrl+alt+a send_text normal Word\\e[H\n#::      map ctrl+alt+a send_text application Word\\eOH\n#::      # Run a command at a shell prompt (like typing the command and pressing Enter)\n#::      map ctrl+alt+a send_text normal,application some command with arguments\\r\n\n#: Open kitty Website\n\n# map shift+cmd+/ open_url https://sw.kovidgoyal.net/kitty/\n\n#: Hide macOS kitty application\n\n# map cmd+h hide_macos_app\n\n#: Hide macOS other applications\n\n# map opt+cmd+h hide_macos_other_apps\n\n#: Minimize macOS window\n\n# map cmd+m minimize_macos_window\n\n#: Quit kitty\n\n# map cmd+q quit\n\n#: }}}\n\n#: }}}\n"
var KittyConfigDefaults = struct {
Term, Shell_integration, Select_by_word_characters, Url_excluded_characters, Shell string
Wheel_scroll_multiplier float64
Url_prefixes []string
}{
Term: "xterm-kitty", Shell_integration: "enabled", Url_prefixes: []string{ "file","ftp","ftps","gemini","git","gopher","http","https","irc","ircs","kitty","mailto","news","sftp","ssh" },
Select_by_word_characters: `@-./_~?&=%+#`, Wheel_scroll_multiplier: 5.0,
Shell: ".", Url_excluded_characters: "",
}
const OptionNames = `action_alias
active_border_color
active_tab_background
active_tab_font_style
active_tab_foreground
active_tab_title_template
allow_cloning
allow_hyperlinks
allow_remote_control
background
background_blur
background_image
background_image_layout
background_image_linear
background_opacity
background_tint
background_tint_gaps
bell_border_color
bell_on_tab
bell_path
bold_font
bold_italic_font
box_drawing_scale
clear_all_mouse_actions
clear_all_shortcuts
clear_selection_on_clipboard_loss
click_interval
clipboard_control
clipboard_max_size
clone_source_strategies
close_on_child_death
color0
color1
color2
color3
color4
color5
color6
color7
color8
color9
color10
color11
color12
color13
color14
color15
color16
color17
color18
color19
color20
color21
color22
color23
color24
color25
color26
color27
color28
color29
color30
color31
color32
color33
color34
color35
color36
color37
color38
color39
color40
color41
color42
color43
color44
color45
color46
color47
color48
color49
color50
color51
color52
color53
color54
color55
color56
color57
color58
color59
color60
color61
color62
color63
color64
color65
color66
color67
color68
color69
color70
color71
color72
color73
color74
color75
color76
color77
color78
color79
color80
color81
color82
color83
color84
color85
color86
color87
color88
color89
color90
color91
color92
color93
color94
color95
color96
color97
color98
color99
color100
color101
color102
color103
color104
color105
color106
color107
color108
color109
color110
color111
color112
color113
color114
color115
color116
color117
color118
color119
color120
color121
color122
color123
color124
color125
color126
color127
color128
color129
color130
color131
color132
color133
color134
color135
color136
color137
color138
color139
color140
color141
color142
color143
color144
color145
color146
color147
color148
color149
color150
color151
color152
color153
color154
color155
color156
color157
color158
color159
color160
color161
color162
color163
color164
color165
color166
color167
color168
color169
color170
color171
color172
color173
color174
color175
color176
color177
color178
color179
color180
color181
color182
color183
color184
color185
color186
color187
color188
color189
color190
color191
color192
color193
color194
color195
color196
color197
color198
color199
color200
color201
color202
color203
color204
color205
color206
color207
color208
color209
color210
color211
color212
color213
color214
color215
color216
color217
color218
color219
color220
color221
color222
color223
color224
color225
color226
color227
color228
color229
color230
color231
color232
color233
color234
color235
color236
color237
color238
color239
color240
color241
color242
color243
color244
color245
color246
color247
color248
color249
color250
color251
color252
color253
color254
color255
command_on_bell
confirm_os_window_close
copy_on_select
cursor
cursor_beam_thickness
cursor_blink_interval
cursor_shape
cursor_shape_unfocused
cursor_stop_blinking_after
cursor_text_color
cursor_trail
cursor_trail_color
cursor_trail_decay
cursor_trail_start_threshold
cursor_underline_thickness
default_pointer_shape
detect_urls
dim_opacity
disable_ligatures
draw_minimal_borders
draw_window_borders_for_single_window
dynamic_background_opacity
editor
enable_audio_bell
enabled_layouts
env
exe_search_path
file_transfer_confirmation_bypass
filter_notification
focus_follows_mouse
font_family
font_features
font_size
force_ltr
foreground
forward_stdio
hide_window_decorations
inactive_border_color
inactive_tab_background
inactive_tab_font_style
inactive_tab_foreground
inactive_text_alpha
initial_window_height
initial_window_width
input_delay
italic_font
kitten_alias
kitty_mod
linux_bell_theme
linux_display_server
listen_on
macos_colorspace
macos_custom_beam_cursor
macos_hide_from_tasks
macos_menubar_title_max_length
macos_option_as_alt
macos_quit_when_last_window_closed
macos_show_window_title_in
macos_thicken_font
macos_titlebar_color
macos_traditional_fullscreen
macos_window_resizable
map
mark1_background
mark1_foreground
mark2_background
mark2_foreground
mark3_background
mark3_foreground
menu_map
modify_font
mouse_hide_wait
mouse_map
narrow_symbols
notify_on_cmd_finish
open_url_with
paste_actions
placement_strategy
pointer_shape_when_dragging
pointer_shape_when_grabbed
remember_window_position
remember_window_size
remote_control_password
repaint_delay
resize_debounce_time
resize_in_steps
scrollback_fill_enlarged_window
scrollback_lines
scrollback_pager
scrollback_pager_history_size
scrollbar
scrollbar_gap
scrollbar_handle_color
scrollbar_handle_opacity
scrollbar_hitbox_expansion
scrollbar_hover_width
scrollbar_interactive
scrollbar_jump_on_click
scrollbar_min_handle_height
scrollbar_radius
scrollbar_track_color
scrollbar_track_hover_opacity
scrollbar_track_opacity
scrollbar_width
select_by_word_characters
select_by_word_characters_forward
selection_background
selection_foreground
shell
shell_integration
show_hyperlink_targets
single_window_margin_width
single_window_padding_width
startup_session
strip_trailing_spaces
symbol_map
sync_to_monitor
tab_activity_symbol
tab_bar_align
tab_bar_background
tab_bar_edge
tab_bar_filter
tab_bar_margin_color
tab_bar_margin_height
tab_bar_margin_width
tab_bar_min_tabs
tab_bar_style
tab_fade
tab_powerline_style
tab_separator
tab_switch_strategy
tab_title_max_length
tab_title_template
term
terminfo_type
text_composition_strategy
text_fg_override_threshold
touch_scroll_multiplier
transparent_background_colors
undercurl_style
underline_exclusion
underline_hyperlinks
update_check_interval
url_color
url_excluded_characters
url_prefixes
url_style
visual_bell_color
visual_bell_duration
visual_window_select_characters
watcher
wayland_enable_ime
wayland_titlebar_color
wheel_scroll_min_lines
wheel_scroll_multiplier
window_alert_on_bell
window_border_width
window_logo_alpha
window_logo_path
window_logo_position
window_logo_scale
window_margin_width
window_padding_width
window_resize_step_cells
window_resize_step_lines`
const DarkThemeFileName = "dark-theme.auto.conf"
const LightThemeFileName = "light-theme.auto.conf"
const NoPreferenceThemeFileName = "no-preference-theme.auto.conf"
